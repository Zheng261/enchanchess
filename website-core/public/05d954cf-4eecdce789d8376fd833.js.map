{"version":3,"sources":["webpack:///./node_modules/framer-motion/dist/framer-motion.es.js"],"names":["MotionValue","init","_a","value","_this","this","_b","transformer","parent","timeDelta","lastUpdated","canTrackVelocity","updateAndNotify","v","render","prev","current","updateSubscribers","forEach","notifySubscriber","children","setChild","renderSubscribers","delta","timestamp","postRender","scheduleVelocityCheck","subscriber","velocityCheck","child","set","isNaN","parseFloat","prototype","addChild","config","Set","add","removeChild","subscribeTo","subscriptions","subscription","updateSubscriber","onChange","onRenderRequest","attach","passiveEffect","get","getVelocity","start","animation","stop","Promise","resolve","stopAnimation","then","clearAnimation","isAnimating","destroy","clear","motionValue","opts","useConstant","ref","isMotionValue","updateStyler","onRead","onRender","state","onUpdate","MotionValuesMap","hasMounted","values","Map","unsubscribers","has","key","bindValueToOutput","defaultValue","undefined","callback","unsubscribeOnRender","output","unsubscribeOnChange","setOnUpdate","setTransformTemplate","transformTemplate","updateTransformTemplate","getTransformTemplate","mount","unmount","_value","unsubscribe","specialMotionValueProps","useMotionValues","props","motionValues","map","session","syncRenderSession","styler","push","isRefObject","hasOwnProperty","resolver","MountRef","isStatic","externalRef","Element","domStyler","preparseOutput","enableHardwareAcceleration","internalRef","mutableExternal_1","useExternalRef","resolveCurrent","resolvedValues","transformOriginProps","isTransformOriginProp","buildStyleAttr","styleProp","motionValueStyles","transform","isKeyframesTarget","Array","isArray","resolveFinalValueInKeyframes","length","dimensionTypes","test","parse","valueTypes","concat","testValueType","type","getDimensionValueType","find","getValueType","underDampedSpring","stiffness","damping","restDelta","restSpeed","overDampedSpring","to","linearTween","ease","duration","keyframes","defaultTransitions","x","y","z","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scale","opacity","backgroundColor","color","just","update","complete","easingDefinitionToFunction","definition","x1","y1","x2","y2","isEasingArray","isAnimatable","startsWith","secondsToMilliseconds","seconds","transitions","tween","spring","inertia","transitionOptionParser","from","velocity","slice","easings","getTransitionDefinition","transitionDefinition","delay","when","delayChildren","staggerChildren","staggerDirection","transition","Object","keys","isTransitionDefined","valueKey","transitionFactory","getDefaultTransition","valueTransitionDefinition","getAnimation","target","origin","isOriginAnimatable","isTargetAnimatable","actionFactory","preprocessOptions","repeatDelay","startAnimation","delay$1","activeAnimation","animationFactory","valueDelay","options","animate","ValueAnimationControls","readValueFromSource","makeTargetAnimatable","variants","baseTarget","overrides","resolvedOverrides","activeOverrides","hasValue","setProps","setVariants","setDefaultTransition","defaultTransition","setValues","_c","_d","isActive","priority","transitionEnd","transformValues","targetValue","checkForNewValues","newValueKeys","filter","numNewValues","i","getAnimatableNone","resolveVariant","variant","custom","getHighestPriority","size","Math","max","apply","setOverride","overrideIndex","startOverride","override","clearOverride","highest","resetIsAnimating","overrideTarget","remainingValues","onStart","onComplete","applyVariantLabels","variantLabelList","reverse","animateVariantLabels","animateVariant","animationDefinition","transitionOverride","_e","animatable","animations","valueTarget","allAnimations","all","variantLabels","label","variantLabel","getAnimations","getChildrenAnimations","animateChildren","last","first","maxStaggerDuration","generateStaggerDuration","childControls","onAnimationStart","onAnimationComplete","checkOverrideIsAnimating","numOverrides","resolvedOverride","controls","resetChildren","AnimationControls","pendingAnimations","componentControls","subscribe","animations_1","MotionContext","isVariantLabel","isAnimationControls","useMotionContext","parentContext","initialState","initial","whileTap","whileHover","exitProps","times","shouldPropagateControls","targetInitial","targetAnimate","initialDependency","animateDependency","context","initialToApply","Infinity","useValueAnimationControls","subscribeToParentControls","parentControls","isExiting","unmountProps","Point","createMotionComponent","getValueControlsConfig","loadFunctionalityComponents","renderComponent","style","prevMotionStyles","thisStyle","useMotionStyles","shouldInheritVariant","inherit","checkShouldInheritVariant","functionality","renderedComponent","Provider","svgElements","subtract","a","b","relativeTo","idOrElem","elem","localElem","document","getElementById","rect","getBoundingClientRect","left","window","scrollX","top","scrollY","MotionPluginContext","transformPagePoint","p","isViewportScrollBlocked","addEventListener","event","preventDefault","passive","unblockViewportScroll","isMouseEvent","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","useUnmountEffect","addDomEvent","eventName","handler","removeEventListener","defaultPagePoint","pageX","pageY","pointFromTouch","e","changedTouches","pointFromMouse","wrapHandler","shouldFilterPrimaryPointer","listener","point","extractEventInfo","eventHandler","button","filterPrimaryPointer","isBrowser$1","supportsTouchEvents","ontouchstart","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","name","onpointerdown","onmousedown","addPointerEvent","usePointerEvent","element","useDomEvent","startDevicePoint","pointHistory","lastDevicePoint","getVelocity$1","timestampedPoint","lastPoint","time","currentVelocity","usePanGesture","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","lastMoveEvent","lastMoveEventInfo","pointerEventSubscription","handlers","removePointerEvents","getPanInfo","currentPoint","offset","transformPoint","info","cancelPan","updatePoint","panStarted","startEvent","distancePastThreshold","onPointerMove","buttons","onPointerUp","initialInfo","removeOnPointerMove","removeOnPointerUp","order","getGesturePriority","gesture","indexOf","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal_1","openVertical_1","tapGesturePriority","hoverPriority","filterTouch","useGestures","onTap","onTapStart","onTapCancel","hasTapListeners","isTapping","cancelPointerEventListener","removePointerUp","openGestureLock","isNodeOrChild","parentElement","useTapGesture","onHoverStart","onHoverEnd","useHoverGesture","makeRenderlessComponent","hook","gestureProps","Gestures","shouldRender","some","Component","innerRef","useMotionValue","allowDefaultPointerDown","getBoundingBox","width","height","getCurrentOffset","calculateConstraintsFromDom","constraintsRef","draggableRef","parentBoundingBox","draggableBoundingBox","right","bottom","shouldDrag","direction","currentDirection","getConstraints","axis","min","applyConstraints","constraints","dragElastic","constrainedValue","applyOverdrag","dragFactor","bothAxis","useDrag","dragDirectionLock","dragPropagation","dragConstraints","_f","_g","dragMomentum","_dragValueX","_dragValueY","_dragTransitionControls","dragOriginX","dragOriginY","dragTransition","onDirectionLock","onDragStart","onDrag","onDragEnd","onDragTransitionEnd","constraintsNeedResolution","dragStatus","isDragging","onResize","defaultOriginX","defaultOriginY","openGlobalLock","prevConstraintsBox","scalePoint","constraintsBox","draggableBox","scaleAxisPoint","dimension","pointToScale","recordBoxInfo","top_1","applyConstraintsToPoint","axisPoint","convertPanToDrag","cancelDrag","lockThreshold","abs","getCurrentDirection","onDirectionLock_1","momentumAnimations","bounceStiffness","bounceDamping","timeConstant","animateDragEnd","tagName","activeElement","HTMLElement","blur","Drag","isCSSVariable","cssVariableRegex","getVariableValue","depth","match","exec","parseCSSVariable","token","fallback","resolved","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","elementStyler","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","reduce","acc","toType","fromType","numKeyframes","removedTransforms","removeNonTranslationalTransform","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","originComputedStyle","targetBbox","convertChangedValueTypes","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","useForceUpdate","forcedRenderCount","setForcedRenderCount","StepName","SyncLayoutContext","jobs","Prepare","Read","Render","jobsNeedProcessing","flushCallbackList","list","numJobs","flushAllJobs","prepare","read","createUseSyncEffect","stepName","layoutSync","defaultLayoutTransition","defaultPositionTransition","axisLabels","id","centerOf","calcAxisDelta","next","names","sizeDelta","getLayout","measure","offsetLeft","offsetTop","offsetWidth","offsetHeight","boundingBox","readPositionStyle","position","isSizeKey","useLayoutAnimation","layoutTransition","positionOnly","isHTMLElement","compare","prevPosition","nextPosition","getLayoutType","calcDelta","originX","originY","isResolver","makeTransition","layoutKey","transformKey","visualOrigin","deltaKey","baseTransition","getDefaultLayoutTransition","offsetToApply","AnimatePropType","Layout","positionTransition","validMotionProps","isValidMotionProp","targetWithoutTransition","mergeTransitionEnd","_a$1","resolveVariantLabels","unresolvedVariant","AnimatePropComponents","Target","targetAndTransition","isInitialRender","prevValues","targetToAnimate","animatingTarget","finalTarget","shouldAnimateOnMount","isValidValue","valueHasUpdated","prevLength","shallowCompare","useAnimateProp","VariantLabel","targetVariants","parentAlreadyMounted","oldVariant","newVariant","shouldAnimate","join","useVariants","AnimationSubscription","useAnimationGroupSubscription","isAnimationSubscription","animationProps","animatePropTypeTests","prop","Exit","exit","hasExitProps","hasExitAnimation","isPlayingExitAnimation","onExitComplete","isPropValid","emotionIsPropValid_1","functionalityComponents","numFunctionalityComponents","createDomMotionConfig","isDOM","isSVG","forwardedProps","domProps","filterValidProps","staticVisualStyles","buildSVGProps","activeComponents","Animation","animatePropType","getAnimationComponent","Component_1","htmlMotionComponents","svgMotionComponents","motion","PresenceChild","getChildKey","AnimatePresence","exitBeforeEnter","localForceUpdate","forceUpdate","filteredChildren","filtered","onlyElements","presentChildren","allChildren","exiting","updateChildLookup","childrenToRender","presentKeys","targetKeys","numPresent","insertionIndex","removeIndex","findIndex","splice"],"mappings":"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","file":"05d954cf-4eecdce789d8376fd833.js","sourcesContent":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nimport \"core-js/modules/es6.array.for-each\";\nimport { __assign, __rest } from 'tslib';\nimport { useRef, useEffect, memo, forwardRef, createContext, useMemo, useContext, createElement, Fragment, useCallback, useState, useLayoutEffect, cloneElement, Children, isValidElement } from 'react';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { velocityPerSecond, distance, mix, interpolate, wrap } from '@popmotion/popcorn';\nimport styler, { createStylerFactory, buildStyleProperty, isTransformProp, transformProps, buildSVGAttrs } from 'stylefire';\nimport { invariant, warning } from 'hey-listen';\nimport { number, px, percent, degrees, vw, vh, color, complex } from 'style-value-types';\nimport { action, delay, tween, spring, keyframes as keyframes$1, inertia } from 'popmotion';\nimport * as easingLookup from '@popmotion/easing';\nimport { cubicBezier, linear } from '@popmotion/easing';\n\nvar isFloat = function isFloat(value) {\n  return !isNaN(parseFloat(value));\n};\n/**\r\n * `MotionValue` is used to track the state and velocity of motion values.\r\n *\r\n * @public\r\n */\n\n\nvar MotionValue =\n/** @class */\nfunction () {\n  /**\r\n   * @param init - The initiating value\r\n   * @param config - Optional configuration options\r\n   *\r\n   * -  `transformer`: A function to transform incoming values with.\r\n   *\r\n   * @internal\r\n   */\n  function MotionValue(init, _a) {\n    var _this = this;\n\n    var _b = _a === void 0 ? {} : _a,\n        transformer = _b.transformer,\n        parent = _b.parent;\n    /**\r\n     * Duration, in milliseconds, since last updating frame.\r\n     *\r\n     * @internal\r\n     */\n\n\n    this.timeDelta = 0;\n    /**\r\n     * Timestamp of the last time this `MotionValue` was updated.\r\n     *\r\n     * @internal\r\n     */\n\n    this.lastUpdated = 0;\n    /**\r\n     * Tracks whether this value can output a velocity. Currently this is only true\r\n     * if the value is numerical, but we might be able to widen the scope here and support\r\n     * other value types.\r\n     *\r\n     * @internal\r\n     */\n\n    this.canTrackVelocity = false;\n\n    this.updateAndNotify = function (v, render) {\n      if (render === void 0) {\n        render = true;\n      }\n\n      _this.prev = _this.current;\n      _this.current = _this.transformer ? _this.transformer(v) : v;\n\n      if (_this.updateSubscribers && _this.prev !== _this.current) {\n        _this.updateSubscribers.forEach(_this.notifySubscriber);\n      }\n\n      if (_this.children) {\n        _this.children.forEach(_this.setChild);\n      }\n\n      if (render && _this.renderSubscribers) {\n        _this.renderSubscribers.forEach(_this.notifySubscriber);\n      } // Update timestamp\n\n\n      var _a = getFrameData(),\n          delta = _a.delta,\n          timestamp = _a.timestamp;\n\n      if (_this.lastUpdated !== timestamp) {\n        _this.timeDelta = delta;\n        _this.lastUpdated = timestamp;\n        sync.postRender(_this.scheduleVelocityCheck);\n      }\n    };\n    /**\r\n     * Notify a subscriber with the latest value.\r\n     *\r\n     * This is an instanced and bound function to prevent generating a new\r\n     * function once per frame.\r\n     *\r\n     * @param subscriber - The subscriber to notify.\r\n     *\r\n     * @internal\r\n     */\n\n\n    this.notifySubscriber = function (subscriber) {\n      subscriber(_this.current);\n    };\n    /**\r\n     * Schedule a velocity check for the next frame.\r\n     *\r\n     * This is an instanced and bound function to prevent generating a new\r\n     * function once per frame.\r\n     *\r\n     * @internal\r\n     */\n\n\n    this.scheduleVelocityCheck = function () {\n      return sync.postRender(_this.velocityCheck);\n    };\n    /**\r\n     * Updates `prev` with `current` if the value hasn't been updated this frame.\r\n     * This ensures velocity calculations return `0`.\r\n     *\r\n     * This is an instanced and bound function to prevent generating a new\r\n     * function once per frame.\r\n     *\r\n     * @internal\r\n     */\n\n\n    this.velocityCheck = function (_a) {\n      var timestamp = _a.timestamp;\n\n      if (timestamp !== _this.lastUpdated) {\n        _this.prev = _this.current;\n      }\n    };\n    /**\r\n     * Updates child `MotionValue`.\r\n     *\r\n     * @param child - Child `MotionValue`.\r\n     *\r\n     * @internal\r\n     */\n\n\n    this.setChild = function (child) {\n      return child.set(_this.current);\n    };\n\n    this.parent = parent;\n    this.transformer = transformer;\n    this.set(init, false);\n    this.canTrackVelocity = isFloat(this.current);\n  }\n  /**\r\n   * Creates a new `MotionValue` that's subscribed to the output of this one.\r\n   *\r\n   * @param config - Optional configuration options\r\n   *\r\n   * -  `transformer`: A function to transform incoming values with.\r\n   *\r\n   * @internal\r\n   */\n\n\n  MotionValue.prototype.addChild = function (config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    var child = new MotionValue(this.current, __assign({\n      parent: this\n    }, config));\n    if (!this.children) this.children = new Set();\n    this.children.add(child);\n    return child;\n  };\n  /**\r\n   * Stops a `MotionValue` from being subscribed to this one.\r\n   *\r\n   * @param child - The subscribed `MotionValue`\r\n   *\r\n   * @internal\r\n   */\n\n\n  MotionValue.prototype.removeChild = function (child) {\n    if (!this.children) {\n      return;\n    }\n\n    this.children[\"delete\"](child);\n  };\n  /**\r\n   * Subscribes a subscriber function to a subscription list.\r\n   *\r\n   * @param subscriptions - A `Set` of subscribers.\r\n   * @param subscription - A subscriber function.\r\n   */\n\n\n  MotionValue.prototype.subscribeTo = function (subscriptions, subscription) {\n    var _this = this;\n\n    var updateSubscriber = function updateSubscriber() {\n      return subscription(_this.current);\n    };\n\n    subscriptions.add(updateSubscriber);\n    return function () {\n      return subscriptions[\"delete\"](updateSubscriber);\n    };\n  };\n  /**\r\n   * Adds a function that will be notified when the `MotionValue` is updated.\r\n   *\r\n   * It returns a function that, when called, will cancel the subscription.\r\n   *\r\n   * When calling `onChange` inside a React component, it should be wrapped with the\r\n   * `useEffect` hook. As it returns an unsubscribe function, this should be returned\r\n   * from the `useEffect` function to ensure you don't add duplicate subscribers..\r\n   *\r\n   * @library\r\n   *\r\n   * ```jsx\r\n   * function MyComponent() {\r\n   *   const x = useMotionValue(0)\r\n   *   const y = useMotionValue(0)\r\n   *   const opacity = useMotionValue(1)\r\n   *\r\n   *   useEffect(() => {\r\n   *     function updateOpacity() {\r\n   *       const maxXY = Math.max(x.get(), y.get())\r\n   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n   *       opacity.set(newOpacity)\r\n   *     }\r\n   *\r\n   *     const unsubscribeX = x.onChange(updateOpacity)\r\n   *     const unsubscribeY = y.onChange(updateOpacity)\r\n   *\r\n   *     return () => {\r\n   *       unsubscribeX()\r\n   *       unsubscribeY()\r\n   *     }\r\n   *   }, [])\r\n   *\r\n   *   return <Frame x={x} />\r\n   * }\r\n   * ```\r\n   *\r\n   * @motion\r\n   *\r\n   * ```jsx\r\n   * export const MyComponent = () => {\r\n   *   const x = useMotionValue(0)\r\n   *   const y = useMotionValue(0)\r\n   *   const opacity = useMotionValue(1)\r\n   *\r\n   *   useEffect(() => {\r\n   *     function updateOpacity() {\r\n   *       const maxXY = Math.max(x.get(), y.get())\r\n   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n   *       opacity.set(newOpacity)\r\n   *     }\r\n   *\r\n   *     const unsubscribeX = x.onChange(updateOpacity)\r\n   *     const unsubscribeY = y.onChange(updateOpacity)\r\n   *\r\n   *     return () => {\r\n   *       unsubscribeX()\r\n   *       unsubscribeY()\r\n   *     }\r\n   *   }, [])\r\n   *\r\n   *   return <motion.div style={{ x }} />\r\n   * }\r\n   * ```\r\n   *\r\n   * @internalremarks\r\n   *\r\n   * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\r\n   *\r\n   * ```jsx\r\n   * useOnChange(x, () => {})\r\n   * ```\r\n   *\r\n   * @param subscriber - A function that receives the latest value.\r\n   * @returns A function that, when called, will cancel this subscription.\r\n   *\r\n   * @public\r\n   */\n\n\n  MotionValue.prototype.onChange = function (subscription) {\n    if (!this.updateSubscribers) this.updateSubscribers = new Set();\n    return this.subscribeTo(this.updateSubscribers, subscription);\n  };\n  /**\r\n   * Adds a function that will be notified when the `MotionValue` requests a render.\r\n   *\r\n   * @param subscriber - A function that's provided the latest value.\r\n   * @returns A function that, when called, will cancel this subscription.\r\n   *\r\n   * @internal\r\n   */\n\n\n  MotionValue.prototype.onRenderRequest = function (subscription) {\n    if (!this.renderSubscribers) this.renderSubscribers = new Set(); // Render immediately\n\n    this.notifySubscriber(subscription);\n    return this.subscribeTo(this.renderSubscribers, subscription);\n  };\n  /**\r\n   * Attaches a passive effect to the `MotionValue`.\r\n   *\r\n   * @internal\r\n   */\n\n\n  MotionValue.prototype.attach = function (passiveEffect) {\n    this.passiveEffect = passiveEffect;\n  };\n  /**\r\n   * Sets the state of the `MotionValue`.\r\n   *\r\n   * @remarks\r\n   *\r\n   * ```jsx\r\n   * const x = useMotionValue(0)\r\n   * x.set(10)\r\n   * ```\r\n   *\r\n   * @param latest - Latest value to set.\r\n   * @param render - Whether to notify render subscribers. Defaults to `true`\r\n   *\r\n   * @public\r\n   */\n\n\n  MotionValue.prototype.set = function (v, render) {\n    if (render === void 0) {\n      render = true;\n    }\n\n    if (!render || !this.passiveEffect) {\n      this.updateAndNotify(v, render);\n    } else {\n      this.passiveEffect(v, this.updateAndNotify);\n    }\n  };\n  /**\r\n   * Returns the latest state of `MotionValue`\r\n   *\r\n   * @returns - The latest state of `MotionValue`\r\n   *\r\n   * @public\r\n   */\n\n\n  MotionValue.prototype.get = function () {\n    return this.current;\n  };\n  /**\r\n   * Returns the latest velocity of `MotionValue`\r\n   *\r\n   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\r\n   *\r\n   * @public\r\n   */\n\n\n  MotionValue.prototype.getVelocity = function () {\n    // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n    return this.canTrackVelocity ? // These casts could be avoided if parseFloat would be typed better\n    velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0;\n  };\n  /**\r\n   * Registers a new animation to control this `MotionValue`. Only one\r\n   * animation can drive a `MotionValue` at one time.\r\n   *\r\n   * ```jsx\r\n   * value.start()\r\n   * ```\r\n   *\r\n   * @param animation - A function that starts the provided animation\r\n   *\r\n   * @internal\r\n   */\n\n\n  MotionValue.prototype.start = function (animation) {\n    var _this = this;\n\n    this.stop();\n    return new Promise(function (resolve) {\n      _this.stopAnimation = animation(resolve);\n    }).then(function () {\n      return _this.clearAnimation();\n    });\n  };\n  /**\r\n   * Stop the currently active animation.\r\n   *\r\n   * @public\r\n   */\n\n\n  MotionValue.prototype.stop = function () {\n    if (this.stopAnimation) this.stopAnimation();\n    this.clearAnimation();\n  };\n  /**\r\n   * Returns `true` if this value is currently animating.\r\n   *\r\n   * @public\r\n   */\n\n\n  MotionValue.prototype.isAnimating = function () {\n    return !!this.stopAnimation;\n  };\n\n  MotionValue.prototype.clearAnimation = function () {\n    this.stopAnimation = null;\n  };\n  /**\r\n   * Destroy and clean up subscribers to this `MotionValue`.\r\n   *\r\n   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\r\n   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\r\n   * created a `MotionValue` via the `motionValue` function.\r\n   *\r\n   * @public\r\n   */\n\n\n  MotionValue.prototype.destroy = function () {\n    this.updateSubscribers && this.updateSubscribers.clear();\n    this.renderSubscribers && this.renderSubscribers.clear();\n    this.parent && this.parent.removeChild(this);\n    this.stop();\n  };\n\n  return MotionValue;\n}();\n/**\r\n * @internal\r\n */\n\n\nfunction motionValue(init, opts) {\n  return new MotionValue(init, opts);\n}\n/**\r\n * Creates a constant value over the lifecycle of a component.\r\n *\r\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\r\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\r\n * you can ensure that initialisers don't execute twice or more.\r\n */\n\n\nfunction useConstant(init) {\n  var ref = useRef(null);\n\n  if (ref.current === null) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar isMotionValue = function isMotionValue(value) {\n  return value instanceof MotionValue;\n}; // Creating a styler factory for the `onUpdate` prop allows all values\n// to fire and the `onUpdate` prop will only fire once per frame\n\n\nvar updateStyler = createStylerFactory({\n  onRead: function onRead() {\n    return null;\n  },\n  onRender: function onRender(state, _a) {\n    var onUpdate = _a.onUpdate;\n    return onUpdate(state);\n  }\n});\n\nvar MotionValuesMap =\n/** @class */\nfunction () {\n  function MotionValuesMap() {\n    this.hasMounted = false;\n    this.values = new Map();\n    this.unsubscribers = new Map();\n  }\n\n  MotionValuesMap.prototype.has = function (key) {\n    return this.values.has(key);\n  };\n\n  MotionValuesMap.prototype.set = function (key, value) {\n    this.values.set(key, value);\n\n    if (this.hasMounted) {\n      this.bindValueToOutput(key, value);\n    }\n  };\n\n  MotionValuesMap.prototype.get = function (key, defaultValue) {\n    var value = this.values.get(key);\n\n    if (value === undefined && defaultValue !== undefined) {\n      value = new MotionValue(defaultValue);\n      this.set(key, value);\n    }\n\n    return value;\n  };\n\n  MotionValuesMap.prototype.forEach = function (callback) {\n    return this.values.forEach(callback);\n  };\n\n  MotionValuesMap.prototype.bindValueToOutput = function (key, value) {\n    var _this = this;\n\n    var onRender = function onRender(v) {\n      return _this.output && _this.output(key, v);\n    };\n\n    var unsubscribeOnRender = value.onRenderRequest(onRender);\n\n    var onChange = function onChange(v) {\n      _this.onUpdate && _this.onUpdate.set(key, v);\n    };\n\n    var unsubscribeOnChange = value.onChange(onChange);\n\n    if (this.unsubscribers.has(key)) {\n      this.unsubscribers.get(key)();\n    }\n\n    this.unsubscribers.set(key, function () {\n      unsubscribeOnRender();\n      unsubscribeOnChange();\n    });\n  };\n\n  MotionValuesMap.prototype.setOnUpdate = function (onUpdate) {\n    this.onUpdate = undefined;\n\n    if (onUpdate) {\n      this.onUpdate = updateStyler({\n        onUpdate: onUpdate\n      });\n    }\n  };\n\n  MotionValuesMap.prototype.setTransformTemplate = function (transformTemplate) {\n    if (this.transformTemplate !== transformTemplate) {\n      this.transformTemplate = transformTemplate;\n      this.updateTransformTemplate();\n    }\n  };\n\n  MotionValuesMap.prototype.getTransformTemplate = function () {\n    return this.transformTemplate;\n  };\n\n  MotionValuesMap.prototype.updateTransformTemplate = function () {\n    if (this.output) {\n      this.output(\"transform\", this.transformTemplate);\n    }\n  };\n\n  MotionValuesMap.prototype.mount = function (output) {\n    var _this = this;\n\n    this.hasMounted = true;\n    if (output) this.output = output;\n    this.values.forEach(function (value, key) {\n      return _this.bindValueToOutput(key, value);\n    });\n    this.updateTransformTemplate();\n  };\n\n  MotionValuesMap.prototype.unmount = function () {\n    var _this = this;\n\n    this.values.forEach(function (_value, key) {\n      var unsubscribe = _this.unsubscribers.get(key);\n\n      unsubscribe && unsubscribe();\n    });\n  };\n\n  return MotionValuesMap;\n}();\n\nvar specialMotionValueProps = new Set([\"dragOriginX\", \"dragOriginY\"]);\n\nvar useMotionValues = function useMotionValues(props) {\n  var motionValues = useConstant(function () {\n    var map = new MotionValuesMap();\n    /**\r\n     * Loop through every prop and add any detected `MotionValue`s. This is SVG-specific\r\n     * code that should be extracted, perhaps considered hollistically with `useMotionStyles`.\r\n     *\r\n     * <motion.circle cx={motionValue(0)} />\r\n     */\n\n    for (var key in props) {\n      if (isMotionValue(props[key]) && !specialMotionValueProps.has(key)) {\n        map.set(key, props[key]);\n      }\n    }\n\n    return map;\n  });\n  motionValues.setOnUpdate(props.onUpdate);\n  motionValues.setTransformTemplate(props.transformTemplate);\n  return motionValues;\n};\n\nvar session = null;\nvar syncRenderSession = {\n  isOpen: function isOpen() {\n    return session !== null;\n  },\n  open: function open() {\n    invariant(!session, \"Sync render session already open\");\n    session = [];\n  },\n  flush: function flush() {\n    invariant(session !== null, \"No sync render session found\");\n    session && session.forEach(function (styler) {\n      return styler.render();\n    });\n    session = null;\n  },\n  push: function push(styler) {\n    invariant(session !== null, \"No sync render session found\");\n    session && session.push(styler);\n  }\n};\n\nvar isRefObject = function isRefObject(ref) {\n  return typeof ref === \"object\" && ref.hasOwnProperty(\"current\");\n};\n/**\r\n * Uses the ref that is passed in, or creates a new one\r\n * @param external - External ref\r\n * @internal\r\n */\n\n\nfunction useExternalRef(internalRef, externalRef) {\n  useEffect(function () {\n    // If there's no external ref, we don't need to handle it in a special way\n    if (!externalRef) return;\n\n    if (typeof externalRef === \"function\") {\n      externalRef(internalRef.current);\n      return function () {\n        return externalRef(null);\n      };\n    } else if (isRefObject(externalRef)) {\n      var mutableExternal_1 = externalRef; // If we've been provided a RefObject, we need to assign its current with our\n      // current on mount\n\n      mutableExternal_1.current = internalRef.current;\n      return function () {\n        // We only set our external ref value to null on unmount if it still contains the\n        // same element as our internal ref. This is because the component might be a child\n        // of `AnimatePresence` where we might be in a situation where a user is providing\n        // the same ref to multiple components.\n        if (externalRef.current === internalRef.current) {\n          mutableExternal_1.current = null;\n        }\n      };\n    }\n  }, []);\n}\n/**\r\n * `useEffect` gets resolved bottom-up. We defer some optional functionality to child\r\n * components, so to ensure everything runs correctly we export the ref-binding logic\r\n * to a new component rather than in `useMotionValues`.\r\n */\n\n\nvar MountRefComponent = function MountRefComponent(_a, ref) {\n  var values = _a.values,\n      isStatic = _a.isStatic,\n      externalRef = _a.externalRef;\n  useEffect(function () {\n    invariant(ref.current instanceof Element, \"No `ref` found. Ensure components created with `motion.custom` forward refs using `React.forwardRef`\");\n    var domStyler = styler(ref.current, {\n      preparseOutput: false,\n      enableHardwareAcceleration: !isStatic\n    });\n    values.mount(function (key, value) {\n      domStyler.set(key, value);\n\n      if (syncRenderSession.isOpen()) {\n        syncRenderSession.push(domStyler);\n      }\n    });\n    return function () {\n      return values.unmount();\n    };\n  }, []);\n  useExternalRef(ref, externalRef);\n  return null;\n};\n\nvar MountRef = memo(forwardRef(MountRefComponent));\n\nvar createValueResolver = function createValueResolver(resolver) {\n  return function (values) {\n    var resolvedValues = {};\n    values.forEach(function (value, key) {\n      return resolvedValues[key] = resolver(value);\n    });\n    return resolvedValues;\n  };\n};\n\nvar resolveCurrent = createValueResolver(function (value) {\n  return value.get();\n});\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\n\nvar isTransformOriginProp = function isTransformOriginProp(key) {\n  return transformOriginProps.has(key);\n};\n\nvar buildStyleAttr = function buildStyleAttr(values, styleProp, isStatic) {\n  var motionValueStyles = resolveCurrent(values);\n  var transformTemplate = values.getTransformTemplate();\n\n  if (transformTemplate) {\n    // If `transform` has been manually set as a string, pass that through the template\n    // otherwise pass it forward to Stylefire's style property builder\n    motionValueStyles.transform = styleProp.transform ? transformTemplate({}, styleProp.transform) : transformTemplate;\n  }\n\n  return buildStyleProperty(__assign({}, styleProp, motionValueStyles), !isStatic);\n};\n\nvar useMotionStyles = function useMotionStyles(values, styleProp, isStatic, transformValues) {\n  if (styleProp === void 0) {\n    styleProp = {};\n  }\n\n  var style = {};\n  var prevMotionStyles = useRef({}).current;\n\n  for (var key in styleProp) {\n    var thisStyle = styleProp[key];\n\n    if (isMotionValue(thisStyle)) {\n      // If this is a motion value, add it to our MotionValuesMap\n      values.set(key, thisStyle);\n    } else if (!isStatic && (isTransformProp(key) || isTransformOriginProp(key))) {\n      // Or if it's a transform prop, create a motion value (or update an existing one)\n      // to ensure Stylefire can reconcile all the transform values together.\n      // A further iteration on this would be to create a single styler per component that gets\n      // used in the DOM renderer's buildStyleAttr *and* animations, then we would only\n      // have to convert animating values to `MotionValues` (we could probably remove this entire function).\n      // The only architectural consideration is to allow Stylefire to have elements mounted after\n      // a styler is created.\n      if (!values.has(key)) {\n        // If it doesn't exist as a motion value, create it\n        values.set(key, motionValue(thisStyle));\n      } else {\n        // Otherwise only update it if it's changed from a previous render\n        if (thisStyle !== prevMotionStyles[key]) {\n          var value = values.get(key);\n          value.set(thisStyle);\n        }\n      }\n\n      prevMotionStyles[key] = thisStyle;\n    } else {\n      style[key] = thisStyle;\n    }\n  }\n\n  return transformValues ? transformValues(style) : style;\n};\n\nvar isKeyframesTarget = function isKeyframesTarget(v) {\n  return Array.isArray(v);\n};\n\nvar isCustomValue = function isCustomValue(v) {\n  return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\n\nvar resolveFinalValueInKeyframes = function resolveFinalValueInKeyframes(v) {\n  // TODO maybe throw if v.length - 1 is placeholder token?\n  return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nvar auto = {\n  test: function test(v) {\n    return v === \"auto\";\n  },\n  parse: function parse(v) {\n    return v;\n  }\n};\nvar dimensionTypes = [number, px, percent, degrees, vw, vh, auto];\nvar valueTypes = dimensionTypes.concat([color, complex]);\n\nvar testValueType = function testValueType(v) {\n  return function (type) {\n    return type.test(v);\n  };\n};\n\nvar getDimensionValueType = function getDimensionValueType(v) {\n  return dimensionTypes.find(testValueType(v));\n};\n\nvar getValueType = function getValueType(v) {\n  return valueTypes.find(testValueType(v));\n};\n\nvar underDampedSpring = function underDampedSpring() {\n  return {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restDelta: 0.5,\n    restSpeed: 10\n  };\n};\n\nvar overDampedSpring = function overDampedSpring(to) {\n  return {\n    type: \"spring\",\n    stiffness: 700,\n    damping: to === 0 ? 100 : 35\n  };\n};\n\nvar linearTween = function linearTween() {\n  return {\n    ease: \"linear\",\n    duration: 0.3\n  };\n};\n\nvar keyframes = function keyframes(values) {\n  return {\n    type: \"keyframes\",\n    duration: 0.8,\n    values: values\n  };\n};\n\nvar defaultTransitions = {\n  x: underDampedSpring,\n  y: underDampedSpring,\n  z: underDampedSpring,\n  rotate: underDampedSpring,\n  rotateX: underDampedSpring,\n  rotateY: underDampedSpring,\n  rotateZ: underDampedSpring,\n  scaleX: overDampedSpring,\n  scaleY: overDampedSpring,\n  scale: overDampedSpring,\n  opacity: linearTween,\n  backgroundColor: linearTween,\n  color: linearTween,\n  \"default\": overDampedSpring\n};\n\nvar getDefaultTransition = function getDefaultTransition(valueKey, to) {\n  var transitionFactory;\n\n  if (isKeyframesTarget(to)) {\n    transitionFactory = keyframes;\n  } else {\n    transitionFactory = defaultTransitions[valueKey] || defaultTransitions[\"default\"];\n  }\n\n  return __assign({\n    to: to\n  }, transitionFactory(to));\n};\n/**\r\n * A Popmotion action that accepts a single `to` prop. When it starts, it immediately\r\n * updates with `to` and then completes. By using this we can compose instant transitions\r\n * in with the same logic that applies `delay` or returns a `Promise` etc.\r\n *\r\n * Accepting `duration` is a little bit of a hack that simply defers the completetion of\r\n * the animation until after the duration finishes. This is for situations when you're **only**\r\n * animating non-animatable values and then setting something on `transitionEnd`. Really\r\n * you want this to fire after the \"animation\" finishes, rather than instantly.\r\n *\r\n * ```\r\n * animate={{\r\n *   display: 'block',\r\n *   transitionEnd: { display: 'none' }\r\n * }}\r\n * ```\r\n */\n\n\nvar just = function just(_a) {\n  var to = _a.to,\n      duration = _a.duration;\n  return action(function (_a) {\n    var update = _a.update,\n        complete = _a.complete;\n    update(to);\n    duration ? delay(duration).start({\n      complete: complete\n    }) : complete();\n  });\n};\n\nvar easingDefinitionToFunction = function easingDefinitionToFunction(definition) {\n  if (Array.isArray(definition)) {\n    // If cubic bezier definition, create bezier curve\n    invariant(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\n    var x1 = definition[0],\n        y1 = definition[1],\n        x2 = definition[2],\n        y2 = definition[3];\n    return cubicBezier(x1, y1, x2, y2);\n  } else if (typeof definition === \"string\") {\n    // Else lookup from table\n    invariant(easingLookup[definition] !== undefined, \"Invalid easing type '\" + definition + \"'\");\n    return easingLookup[definition];\n  }\n\n  return definition;\n};\n\nvar isEasingArray = function isEasingArray(ease) {\n  return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nvar isDurationAnimation = function isDurationAnimation(v) {\n  return v.hasOwnProperty(\"duration\") || v.hasOwnProperty(\"repeatDelay\");\n};\n/**\r\n * Check if a value is animatable. Examples:\r\n *\r\n * ✅: 100, \"100px\", \"#fff\"\r\n * ❌: \"block\", \"url(2.jpg)\"\r\n * @param value\r\n *\r\n * @internal\r\n */\n\n\nvar isAnimatable = function isAnimatable(key, value) {\n  // If the list of keys tat might be non-animatable grows, replace with Set\n  if (key === \"zIndex\") return false; // If it's a number or a keyframes array, we can animate it. We might at some point\n  // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n  // but for now lets leave it like this for performance reasons\n\n  if (typeof value === \"number\" || Array.isArray(value)) return true;\n\n  if (typeof value === \"string\" && // It's animatable if we have a string\n  complex.test(value) && // And it contains numbers and/or colors\n  !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n  ) {\n      return true;\n    }\n\n  return false;\n};\n/**\r\n * Converts seconds to milliseconds\r\n *\r\n * @param seconds - Time in seconds.\r\n * @return milliseconds - Converted time in milliseconds.\r\n */\n\n\nvar secondsToMilliseconds = function secondsToMilliseconds(seconds) {\n  return seconds * 1000;\n};\n\nvar transitions = {\n  tween: tween,\n  spring: spring,\n  keyframes: keyframes$1,\n  inertia: inertia,\n  just: just\n};\nvar transitionOptionParser = {\n  tween: function tween(opts) {\n    if (opts.ease) {\n      var ease = isEasingArray(opts.ease) ? opts.ease[0] : opts.ease;\n      opts.ease = easingDefinitionToFunction(ease);\n    }\n\n    return opts;\n  },\n  keyframes: function keyframes(_a) {\n    var from = _a.from,\n        to = _a.to,\n        velocity = _a.velocity,\n        opts = __rest(_a, [\"from\", \"to\", \"velocity\"]);\n\n    if (opts.values && opts.values[0] === null) {\n      var values = opts.values.slice();\n      values[0] = from;\n      opts.values = values;\n    }\n\n    if (opts.ease) {\n      opts.easings = isEasingArray(opts.ease) ? opts.ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(opts.ease);\n    }\n\n    opts.ease = linear;\n    return opts;\n  }\n};\n\nvar isTransitionDefined = function isTransitionDefined(_a) {\n  var when = _a.when,\n      delay = _a.delay,\n      delayChildren = _a.delayChildren,\n      staggerChildren = _a.staggerChildren,\n      staggerDirection = _a.staggerDirection,\n      transition = __rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\"]);\n\n  return Object.keys(transition).length;\n};\n\nvar getTransitionDefinition = function getTransitionDefinition(key, to, transitionDefinition) {\n  var delay = transitionDefinition ? transitionDefinition.delay : 0; // If no object, return default transition\n  // A better way to handle this would be to deconstruct out all the shared Orchestration props\n  // and see if there's any props remaining\n\n  if (transitionDefinition === undefined || !isTransitionDefined(transitionDefinition)) {\n    return __assign({\n      delay: delay\n    }, getDefaultTransition(key, to));\n  }\n\n  var valueTransitionDefinition = transitionDefinition[key] || transitionDefinition[\"default\"] || transitionDefinition;\n\n  if (valueTransitionDefinition.type === false) {\n    return {\n      delay: valueTransitionDefinition.hasOwnProperty(\"delay\") ? valueTransitionDefinition.delay : delay,\n      to: isKeyframesTarget(to) ? to[to.length - 1] : to,\n      type: \"just\"\n    };\n  } else if (isKeyframesTarget(to)) {\n    return __assign({\n      values: to,\n      duration: 0.8,\n      delay: delay,\n      ease: \"linear\"\n    }, valueTransitionDefinition, {\n      // This animation must be keyframes if we're animating through an array\n      type: \"keyframes\"\n    });\n  } else {\n    return __assign({\n      type: \"tween\",\n      to: to,\n      delay: delay\n    }, valueTransitionDefinition);\n  }\n};\n\nvar preprocessOptions = function preprocessOptions(type, opts) {\n  return transitionOptionParser[type] ? transitionOptionParser[type](opts) : opts;\n};\n\nvar getAnimation = function getAnimation(key, value, target, transition) {\n  var origin = value.get();\n  var isOriginAnimatable = isAnimatable(key, origin);\n  var isTargetAnimatable = isAnimatable(key, target); // TODO we could probably improve this check to ensure both values are of the same type -\n  // for instance 100 to #fff. This might live better in Popmotion.\n\n  warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \" + key + \" from \\\"\" + origin + \"\\\" to \" + target + \". \\\"\" + origin + \"\\\" is not an animatable value - to enable this animation set \" + origin + \" to a value animatable to \" + target + \" via the `style` property.\"); // Parse the `transition` prop and return options for the Popmotion animation\n\n  var _a = getTransitionDefinition(key, target, transition),\n      _b = _a.type,\n      type = _b === void 0 ? \"tween\" : _b,\n      transitionDefinition = __rest(_a, [\"type\"]); // If this is an animatable pair of values, return an animation, otherwise use `just`\n\n\n  var actionFactory = isOriginAnimatable && isTargetAnimatable ? transitions[type] : just;\n  var opts = preprocessOptions(type, __assign({\n    from: origin,\n    velocity: value.getVelocity()\n  }, transitionDefinition)); // Convert duration from Framer Motion's seconds into Popmotion's milliseconds\n\n  if (isDurationAnimation(opts)) {\n    if (opts.duration) {\n      opts.duration = secondsToMilliseconds(opts.duration);\n    }\n\n    if (opts.repeatDelay) {\n      opts.repeatDelay = secondsToMilliseconds(opts.repeatDelay);\n    }\n  }\n\n  return [actionFactory, opts];\n};\n/**\r\n * Start animation on a value. This function completely encapsulates Popmotion-specific logic.\r\n *\r\n * @internal\r\n */\n\n\nfunction startAnimation(key, value, target, _a) {\n  var _b = _a.delay,\n      delay$1 = _b === void 0 ? 0 : _b,\n      transition = __rest(_a, [\"delay\"]);\n\n  return value.start(function (complete) {\n    var activeAnimation;\n\n    var _a = getAnimation(key, value, target, transition),\n        animationFactory = _a[0],\n        _b = _a[1],\n        valueDelay = _b.delay,\n        options = __rest(_b, [\"delay\"]);\n\n    if (valueDelay !== undefined) {\n      delay$1 = valueDelay;\n    }\n\n    var animate = function animate() {\n      var animation = animationFactory(options); // Bind animation opts to animation\n\n      activeAnimation = animation.start({\n        update: function update(v) {\n          return value.set(v);\n        },\n        complete: complete\n      });\n    }; // If we're delaying this animation, only resolve it **after** the delay to\n    // ensure the value's resolve velocity is up-to-date.\n\n\n    if (delay$1) {\n      activeAnimation = delay(secondsToMilliseconds(delay$1)).start({\n        complete: animate\n      });\n    } else {\n      animate();\n    }\n\n    return function () {\n      if (activeAnimation) activeAnimation.stop();\n    };\n  });\n}\n/**\r\n * Get the current value of every `MotionValue`\r\n * @param values -\r\n */\n\n\nvar getCurrent = function getCurrent(values) {\n  var current = {};\n  values.forEach(function (value, key) {\n    return current[key] = value.get();\n  });\n  return current;\n};\n/**\r\n * Get the current velocity of every `MotionValue`\r\n * @param values -\r\n */\n\n\nvar getVelocity = function getVelocity(values) {\n  var velocity = {};\n  values.forEach(function (value, key) {\n    return velocity[key] = value.getVelocity();\n  });\n  return velocity;\n};\n/**\r\n * Check if value is a function that returns a `Target`. A generic typeof === 'function'\r\n * check, just helps with typing.\r\n * @param p -\r\n */\n\n\nvar isTargetResolver = function isTargetResolver(p) {\n  return typeof p === \"function\";\n};\n/**\r\n * Check if value is a list of variant labels\r\n * @param v -\r\n */\n\n\nvar isVariantLabels = function isVariantLabels(v) {\n  return Array.isArray(v);\n};\n/**\r\n * Check if value is a numerical string, ie \"100\" or \"100px\"\r\n */\n\n\nvar isNumericalString = function isNumericalString(v) {\n  return /^\\d*\\.?\\d+$/.test(v);\n};\n/**\r\n * Control animations for a single component\r\n * @internal\r\n */\n\n\nvar ValueAnimationControls =\n/** @class */\nfunction () {\n  function ValueAnimationControls(_a) {\n    var _this = this;\n\n    var values = _a.values,\n        readValueFromSource = _a.readValueFromSource,\n        makeTargetAnimatable = _a.makeTargetAnimatable;\n    /**\r\n     * A reference to the component's latest props. We could probably ditch this in\r\n     * favour to a reference to the `custom` prop now we don't send all props through\r\n     * to target resolvers.\r\n     */\n\n    this.props = {};\n    /**\r\n     * The component's variants, as provided by `variants`\r\n     */\n\n    this.variants = {};\n    /**\r\n     * A set of values that we animate back to when a value is cleared of all overrides.\r\n     */\n\n    this.baseTarget = {};\n    /**\r\n     * A series of target overrides that we can animate to/from when overrides are set/cleared.\r\n     */\n\n    this.overrides = [];\n    /**\r\n     * A series of target overrides as they were originally resolved.\r\n     */\n\n    this.resolvedOverrides = [];\n    /**\r\n     * A Set of currently active override indexes\r\n     */\n\n    this.activeOverrides = new Set();\n    /**\r\n     * A Set of value keys that are currently animating.\r\n     */\n\n    this.isAnimating = new Set();\n    /**\r\n     * Check if the associated `MotionValueMap` has a key with the provided string.\r\n     * Pre-bound to the class so we can provide directly to the `filter` in `checkForNewValues`.\r\n     */\n\n    this.hasValue = function (key) {\n      return !_this.values.has(key);\n    };\n\n    this.values = values;\n    this.readValueFromSource = readValueFromSource;\n    this.makeTargetAnimatable = makeTargetAnimatable;\n    this.values.forEach(function (value, key) {\n      return _this.baseTarget[key] = value.get();\n    });\n  }\n  /**\r\n   * Set the reference to the component's props.\r\n   * @param props -\r\n   */\n\n\n  ValueAnimationControls.prototype.setProps = function (props) {\n    this.props = props;\n  };\n  /**\r\n   * Set the reference to the component's variants\r\n   * @param variants -\r\n   */\n\n\n  ValueAnimationControls.prototype.setVariants = function (variants) {\n    if (variants) this.variants = variants;\n  };\n  /**\r\n   * Set the component's default transition\r\n   * @param transition -\r\n   */\n\n\n  ValueAnimationControls.prototype.setDefaultTransition = function (transition) {\n    if (transition) this.defaultTransition = transition;\n  };\n  /**\r\n   * Set motion values without animation.\r\n   *\r\n   * @param target -\r\n   * @param isActive -\r\n   */\n\n\n  ValueAnimationControls.prototype.setValues = function (_a, _b) {\n    var _this = this;\n\n    var _c = _b === void 0 ? {} : _b,\n        _d = _c.isActive,\n        isActive = _d === void 0 ? new Set() : _d,\n        priority = _c.priority;\n\n    var transition = _a.transition,\n        transitionEnd = _a.transitionEnd,\n        target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n\n    target = this.transformValues(__assign({}, target, transitionEnd));\n    return Object.keys(target).forEach(function (key) {\n      if (isActive.has(key)) return;\n      isActive.add(key);\n      var targetValue = resolveFinalValueInKeyframes(target[key]);\n\n      if (_this.values.has(key)) {\n        var value = _this.values.get(key);\n\n        value && value.set(targetValue);\n      } else {\n        _this.values.set(key, motionValue(targetValue));\n      }\n\n      if (!priority) _this.baseTarget[key] = targetValue;\n    });\n  };\n  /**\r\n   * Allows `transformValues` to be set by a component that allows us to\r\n   * transform the values in a given `Target`. This allows Framer Library\r\n   * to extend Framer Motion to animate `Color` variables etc. Currently we have\r\n   * to manually support these extended types here in Framer Motion.\r\n   *\r\n   * @param values -\r\n   */\n\n\n  ValueAnimationControls.prototype.transformValues = function (values) {\n    var transformValues = this.props.transformValues;\n    return transformValues ? transformValues(values) : values;\n  };\n  /**\r\n   * Check a `Target` for new values we haven't animated yet, and add them\r\n   * to the `MotionValueMap`.\r\n   *\r\n   * Currently there's functionality here that is DOM-specific, we should allow\r\n   * this functionality to be injected by the factory that creates DOM-specific\r\n   * components.\r\n   *\r\n   * @param target -\r\n   */\n\n\n  ValueAnimationControls.prototype.checkForNewValues = function (target) {\n    var newValueKeys = Object.keys(target).filter(this.hasValue);\n    var numNewValues = newValueKeys.length;\n    if (!numNewValues) return;\n\n    for (var i = 0; i < numNewValues; i++) {\n      var key = newValueKeys[i];\n      var targetValue = target[key];\n      var value = null; // If this is a keyframes value, we can attempt to use the first value in the\n      // array as that's going to be the first value of the animation anyway\n\n      if (Array.isArray(targetValue)) {\n        value = targetValue[0];\n      } // If it isn't a keyframes or the first keyframes value was set as `null`, read the\n      // value from the DOM. It might be worth investigating whether to check props (for SVG)\n      // or props.style (for HTML) if the value exists there before attempting to read.\n\n\n      if (value === null) {\n        value = this.readValueFromSource(key);\n        invariant(value !== null, \"No initial value for \\\"\" + key + \"\\\" can be inferred. Ensure an initial value for \\\"\" + key + \"\\\" is defined on the component.\");\n      }\n\n      if (typeof value === \"string\" && isNumericalString(value)) {\n        // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n        value = parseFloat(value);\n      } else if (!getValueType(value) && complex.test(targetValue)) {\n        // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n        value = complex.getAnimatableNone(targetValue);\n      }\n\n      this.values.set(key, motionValue(value));\n      this.baseTarget[key] = value;\n    }\n  };\n  /**\r\n   * Resolve a variant from its label or resolver into an actual `Target` we can animate to.\r\n   * @param variant -\r\n   */\n\n\n  ValueAnimationControls.prototype.resolveVariant = function (variant) {\n    if (!variant) {\n      return {\n        target: undefined,\n        transition: undefined,\n        transitionEnd: undefined\n      };\n    }\n\n    if (isTargetResolver(variant)) {\n      // resolve current and velocity\n      variant = variant(this.props.custom, getCurrent(this.values), getVelocity(this.values));\n    }\n\n    var _a = variant.transition,\n        transition = _a === void 0 ? this.defaultTransition : _a,\n        transitionEnd = variant.transitionEnd,\n        target = __rest(variant, [\"transition\", \"transitionEnd\"]);\n\n    return {\n      transition: transition,\n      transitionEnd: transitionEnd,\n      target: target\n    };\n  };\n  /**\r\n   * Get the highest active override priority index\r\n   */\n\n\n  ValueAnimationControls.prototype.getHighestPriority = function () {\n    if (!this.activeOverrides.size) return 0;\n    return Math.max.apply(Math, Array.from(this.activeOverrides));\n  };\n  /**\r\n   * Set an override. We add this layer of indirection so if, for instance, a tap gesture\r\n   * starts and overrides a hover gesture, when we clear the tap gesture and fallback to the\r\n   * hover gesture, if that hover gesture has changed in the meantime we can go to that rather\r\n   * than the one that was resolved when the hover gesture animation started.\r\n   *\r\n   * @param definition -\r\n   * @param overrideIndex -\r\n   */\n\n\n  ValueAnimationControls.prototype.setOverride = function (definition, overrideIndex) {\n    this.overrides[overrideIndex] = definition;\n\n    if (this.children) {\n      this.children.forEach(function (child) {\n        return child.setOverride(definition, overrideIndex);\n      });\n    }\n  };\n  /**\r\n   * Start an override animation.\r\n   * @param overrideIndex -\r\n   */\n\n\n  ValueAnimationControls.prototype.startOverride = function (overrideIndex) {\n    var override = this.overrides[overrideIndex];\n\n    if (override) {\n      return this.start(override, {\n        priority: overrideIndex\n      });\n    }\n  };\n  /**\r\n   * Clear an override. We check every value we animated to in this override to see if\r\n   * its present on any lower-priority overrides. If not, we animate it back to its base target.\r\n   * @param overrideIndex -\r\n   */\n\n\n  ValueAnimationControls.prototype.clearOverride = function (overrideIndex) {\n    var _this = this;\n\n    if (this.children) {\n      this.children.forEach(function (child) {\n        return child.clearOverride(overrideIndex);\n      });\n    }\n\n    var override = this.overrides[overrideIndex];\n    if (!override) return;\n    this.activeOverrides[\"delete\"](overrideIndex);\n    var highest = this.getHighestPriority();\n    this.resetIsAnimating();\n\n    if (highest) {\n      var highestOverride = this.overrides[highest];\n      highestOverride && this.startOverride(highest);\n    } // Figure out which remaining values were affected by the override and animate those\n\n\n    var overrideTarget = this.resolvedOverrides[overrideIndex];\n    if (!overrideTarget) return;\n    var remainingValues = {};\n\n    for (var key in this.baseTarget) {\n      if (overrideTarget[key] !== undefined) {\n        remainingValues[key] = this.baseTarget[key];\n      }\n    }\n\n    this.onStart();\n    this.animate(remainingValues).then(function () {\n      return _this.onComplete();\n    });\n  };\n  /**\r\n   * Apply a target/variant without any animation\r\n   */\n\n\n  ValueAnimationControls.prototype.apply = function (definition) {\n    if (Array.isArray(definition)) {\n      return this.applyVariantLabels(definition);\n    } else if (typeof definition === \"string\") {\n      return this.applyVariantLabels([definition]);\n    } else {\n      this.setValues(definition);\n    }\n  };\n  /**\r\n   * Apply variant labels without animation\r\n   */\n\n\n  ValueAnimationControls.prototype.applyVariantLabels = function (variantLabelList) {\n    var _this = this;\n\n    var isActive = new Set();\n    var reversedList = variantLabelList.slice().reverse();\n    reversedList.forEach(function (key) {\n      var _a = _this.resolveVariant(_this.variants[key]),\n          target = _a.target,\n          transitionEnd = _a.transitionEnd;\n\n      if (transitionEnd) {\n        _this.setValues(transitionEnd, {\n          isActive: isActive\n        });\n      }\n\n      if (target) {\n        _this.setValues(target, {\n          isActive: isActive\n        });\n      }\n\n      if (_this.children && _this.children.size) {\n        _this.children.forEach(function (child) {\n          return child.applyVariantLabels(variantLabelList);\n        });\n      }\n    });\n  };\n\n  ValueAnimationControls.prototype.start = function (definition, opts) {\n    var _this = this;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (opts.priority) {\n      this.activeOverrides.add(opts.priority);\n    }\n\n    this.resetIsAnimating(opts.priority);\n    var animation;\n\n    if (isVariantLabels(definition)) {\n      animation = this.animateVariantLabels(definition, opts);\n    } else if (typeof definition === \"string\") {\n      animation = this.animateVariant(definition, opts);\n    } else {\n      animation = this.animate(definition, opts);\n    }\n\n    this.onStart();\n    return animation.then(function () {\n      return _this.onComplete();\n    });\n  };\n\n  ValueAnimationControls.prototype.animate = function (animationDefinition, _a) {\n    var _this = this;\n\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.delay,\n        delay = _c === void 0 ? 0 : _c,\n        _d = _b.priority,\n        priority = _d === void 0 ? 0 : _d,\n        transitionOverride = _b.transitionOverride;\n\n    var _e = this.resolveVariant(animationDefinition),\n        target = _e.target,\n        transition = _e.transition,\n        transitionEnd = _e.transitionEnd;\n\n    if (transitionOverride) {\n      transition = transitionOverride;\n    }\n\n    if (!target) return Promise.resolve();\n    target = this.transformValues(target);\n\n    if (transitionEnd) {\n      transitionEnd = this.transformValues(transitionEnd);\n    }\n\n    this.checkForNewValues(target);\n\n    if (this.makeTargetAnimatable) {\n      var animatable = this.makeTargetAnimatable(target, transitionEnd);\n      target = animatable.target;\n      transitionEnd = animatable.transitionEnd;\n    }\n\n    if (priority) {\n      this.resolvedOverrides[priority] = target;\n    }\n\n    this.checkForNewValues(target);\n    var animations = [];\n\n    for (var key in target) {\n      var value = this.values.get(key);\n      if (!value || !target || target[key] === undefined) continue;\n      var valueTarget = target[key];\n\n      if (!priority) {\n        this.baseTarget[key] = resolveFinalValueInKeyframes(valueTarget);\n      }\n\n      if (this.isAnimating.has(key)) continue;\n      this.isAnimating.add(key);\n      animations.push(startAnimation(key, value, valueTarget, __assign({\n        delay: delay\n      }, transition)));\n    }\n\n    var allAnimations = Promise.all(animations);\n    return transitionEnd ? allAnimations.then(function () {\n      _this.setValues(transitionEnd, {\n        priority: priority\n      });\n    }) : allAnimations;\n  };\n\n  ValueAnimationControls.prototype.animateVariantLabels = function (variantLabels, opts) {\n    var _this = this;\n\n    var animations = variantLabels.slice().reverse().map(function (label) {\n      return _this.animateVariant(label, opts);\n    });\n    return Promise.all(animations);\n  };\n\n  ValueAnimationControls.prototype.animateVariant = function (variantLabel, opts) {\n    var _this = this;\n\n    var when = false;\n    var delayChildren = 0;\n    var staggerChildren = 0;\n    var staggerDirection = 1;\n    var priority = opts && opts.priority || 0;\n    var variant = this.variants[variantLabel];\n    var getAnimations = variant ? function () {\n      return _this.animate(variant, opts);\n    } : function () {\n      return Promise.resolve();\n    };\n    var getChildrenAnimations = this.children ? function () {\n      return _this.animateChildren(variantLabel, delayChildren, staggerChildren, staggerDirection, priority);\n    } : function () {\n      return Promise.resolve();\n    };\n\n    if (variant && this.children) {\n      var transition = this.resolveVariant(variant).transition;\n\n      if (transition) {\n        when = transition.when || when;\n        delayChildren = transition.delayChildren || delayChildren;\n        staggerChildren = transition.staggerChildren || staggerChildren;\n        staggerDirection = transition.staggerDirection || staggerDirection;\n      }\n    }\n\n    if (when) {\n      var _a = when === \"beforeChildren\" ? [getAnimations, getChildrenAnimations] : [getChildrenAnimations, getAnimations],\n          first = _a[0],\n          last = _a[1];\n\n      return first().then(last);\n    } else {\n      return Promise.all([getAnimations(), getChildrenAnimations()]);\n    }\n  };\n\n  ValueAnimationControls.prototype.animateChildren = function (variantLabel, delayChildren, staggerChildren, staggerDirection, priority) {\n    if (delayChildren === void 0) {\n      delayChildren = 0;\n    }\n\n    if (staggerChildren === void 0) {\n      staggerChildren = 0;\n    }\n\n    if (staggerDirection === void 0) {\n      staggerDirection = 1;\n    }\n\n    if (priority === void 0) {\n      priority = 0;\n    }\n\n    if (!this.children) {\n      return Promise.resolve();\n    }\n\n    var animations = [];\n    var maxStaggerDuration = (this.children.size - 1) * staggerChildren;\n    var generateStaggerDuration = staggerDirection === 1 ? function (i) {\n      return i * staggerChildren;\n    } : function (i) {\n      return maxStaggerDuration - i * staggerChildren;\n    };\n    Array.from(this.children).forEach(function (childControls, i) {\n      var animation = childControls.animateVariant(variantLabel, {\n        priority: priority,\n        delay: delayChildren + generateStaggerDuration(i)\n      });\n      animations.push(animation);\n    });\n    return Promise.all(animations);\n  };\n\n  ValueAnimationControls.prototype.onStart = function () {\n    var onAnimationStart = this.props.onAnimationStart;\n    onAnimationStart && onAnimationStart();\n  };\n\n  ValueAnimationControls.prototype.onComplete = function () {\n    var onAnimationComplete = this.props.onAnimationComplete;\n    onAnimationComplete && onAnimationComplete();\n  };\n\n  ValueAnimationControls.prototype.checkOverrideIsAnimating = function (priority) {\n    var numOverrides = this.overrides.length;\n\n    for (var i = priority + 1; i < numOverrides; i++) {\n      var resolvedOverride = this.resolvedOverrides[i];\n\n      if (resolvedOverride) {\n        for (var key in resolvedOverride) {\n          this.isAnimating.add(key);\n        }\n      }\n    }\n  };\n\n  ValueAnimationControls.prototype.resetIsAnimating = function (priority) {\n    if (priority === void 0) {\n      priority = 0;\n    }\n\n    this.isAnimating.clear(); // If this isn't the highest priority gesture, block the animation\n    // of anything that's currently being animated\n\n    if (priority < this.getHighestPriority()) {\n      this.checkOverrideIsAnimating(priority);\n    }\n\n    if (this.children) {\n      this.children.forEach(function (child) {\n        return child.resetIsAnimating(priority);\n      });\n    }\n  };\n\n  ValueAnimationControls.prototype.stop = function () {\n    this.values.forEach(function (value) {\n      return value.stop();\n    });\n  };\n  /**\r\n   * Add the controls of a child component.\r\n   * @param controls -\r\n   */\n\n\n  ValueAnimationControls.prototype.addChild = function (controls) {\n    if (!this.children) {\n      this.children = new Set();\n    }\n\n    this.children.add(controls); // We set child overrides when `setOverride` is called, but also have to do it here\n    // as the first time `setOverride` is called all the children might not have been added yet.\n\n    this.overrides.forEach(function (override, i) {\n      override && controls.setOverride(override, i);\n    });\n  };\n\n  ValueAnimationControls.prototype.removeChild = function (controls) {\n    if (!this.children) {\n      return;\n    }\n\n    this.children[\"delete\"](controls);\n  };\n\n  ValueAnimationControls.prototype.resetChildren = function () {\n    if (this.children) this.children.clear();\n  };\n\n  return ValueAnimationControls;\n}();\n/**\r\n * Use a callback a maximum number of times\r\n * @param callback - Callback to run\r\n * @param times - Maximum number of times to run the callback. Defaults to `1`\r\n *\r\n * @public\r\n */\n\n\nfunction useMaxTimes(callback, times) {\n  if (times === void 0) {\n    times = 1;\n  }\n\n  var count = useRef(0);\n  if (count.current++ < times) callback();\n}\n/**\r\n * Control animations on one or more components.\r\n *\r\n * @public\r\n */\n\n\nvar AnimationControls =\n/** @class */\nfunction () {\n  function AnimationControls() {\n    /**\r\n     * Track whether the host component has mounted.\r\n     *\r\n     * @internal\r\n     */\n    this.hasMounted = false;\n    /**\r\n     * Pending animations that are started before a component is mounted.\r\n     *\r\n     * @internal\r\n     */\n\n    this.pendingAnimations = [];\n    /**\r\n     * A collection of linked component animation controls.\r\n     *\r\n     * @internal\r\n     */\n\n    this.componentControls = new Set();\n  }\n  /**\r\n   * Set variants on this and all child components.\r\n   *\r\n   * @param variants - The variants to set\r\n   *\r\n   * @internal\r\n   */\n\n\n  AnimationControls.prototype.setVariants = function (variants) {\n    this.variants = variants;\n    this.componentControls.forEach(function (controls) {\n      return controls.setVariants(variants);\n    });\n  };\n  /**\r\n   * Set a default transition on this and all child components\r\n   *\r\n   * @param transition - The default transition to set\r\n   *\r\n   * @internal\r\n   */\n\n\n  AnimationControls.prototype.setDefaultTransition = function (transition) {\n    this.defaultTransition = transition;\n    this.componentControls.forEach(function (controls) {\n      return controls.setDefaultTransition(transition);\n    });\n  };\n  /**\r\n   * Subscribes a component's animation controls to this.\r\n   *\r\n   * @param controls - The controls to subscribe\r\n   * @returns An unsubscribe function.\r\n   *\r\n   * @internal\r\n   */\n\n\n  AnimationControls.prototype.subscribe = function (controls) {\n    var _this = this;\n\n    this.componentControls.add(controls);\n    if (this.variants) controls.setVariants(this.variants);\n    if (this.defaultTransition) controls.setDefaultTransition(this.defaultTransition);\n    return function () {\n      return _this.componentControls[\"delete\"](controls);\n    };\n  };\n  /**\r\n   * Starts an animation on all linked components.\r\n   *\r\n   * @remarks\r\n   *\r\n   * ```jsx\r\n   * controls.start(\"variantLabel\")\r\n   * controls.start({\r\n   *   x: 0,\r\n   *   transition: { duration: 1 }\r\n   * })\r\n   * ```\r\n   *\r\n   * @param definition - Properties or variant label to animate to\r\n   * @param transition - Optional `transtion` to apply to a variant\r\n   * @returns - A `Promise` that resolves when all animations have completed.\r\n   *\r\n   * @public\r\n   */\n\n\n  AnimationControls.prototype.start = function (definition, transitionOverride) {\n    var _this = this;\n\n    if (this.hasMounted) {\n      var animations_1 = [];\n      this.componentControls.forEach(function (controls) {\n        var animation = controls.start(definition, {\n          transitionOverride: transitionOverride\n        });\n        animations_1.push(animation);\n      });\n      return Promise.all(animations_1);\n    } else {\n      return new Promise(function (resolve) {\n        _this.pendingAnimations.push({\n          animation: [definition, transitionOverride],\n          resolve: resolve\n        });\n      });\n    }\n  };\n  /**\r\n   * Instantly set to a set of properties or a variant.\r\n   *\r\n   * ```jsx\r\n   * // With properties\r\n   * controls.set({ opacity: 0 })\r\n   *\r\n   * // With variants\r\n   * controls.set(\"hidden\")\r\n   * ```\r\n   *\r\n   * @internalremarks\r\n   * We could perform a similar trick to `.start` where this can be called before mount\r\n   * and we maintain a list of of pending actions that get applied on mount. But the\r\n   * expectation of `set` is that it happens synchronously and this would be difficult\r\n   * to do before any children have even attached themselves. It's also poor practise\r\n   * and we should discourage render-synchronous `.start` calls rather than lean into this.\r\n   *\r\n   * @public\r\n   */\n\n\n  AnimationControls.prototype.set = function (definition) {\n    invariant(this.hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n    return this.componentControls.forEach(function (controls) {\n      return controls.apply(definition);\n    });\n  };\n  /**\r\n   * Stops animations on all linked components.\r\n   *\r\n   * ```jsx\r\n   * controls.stop()\r\n   * ```\r\n   *\r\n   * @public\r\n   */\n\n\n  AnimationControls.prototype.stop = function () {\n    this.componentControls.forEach(function (controls) {\n      return controls.stop();\n    });\n  };\n  /**\r\n   * Initialises the animation controls.\r\n   *\r\n   * @internal\r\n   */\n\n\n  AnimationControls.prototype.mount = function () {\n    var _this = this;\n\n    this.hasMounted = true;\n    this.pendingAnimations.forEach(function (_a) {\n      var animation = _a.animation,\n          resolve = _a.resolve;\n      return _this.start.apply(_this, animation).then(resolve);\n    });\n  };\n  /**\r\n   * Stops all child animations when the host component unmounts.\r\n   *\r\n   * @internal\r\n   */\n\n\n  AnimationControls.prototype.unmount = function () {\n    this.hasMounted = false;\n    this.stop();\n  };\n\n  return AnimationControls;\n}();\n/**\r\n * @internal\r\n */\n\n\nvar animationControls = function animationControls() {\n  return new AnimationControls();\n};\n/**\r\n * @internal\r\n */\n\n\nvar MotionContext = createContext({\n  \"static\": false\n});\n\nvar isVariantLabel = function isVariantLabel(v) {\n  return typeof v === \"string\" || Array.isArray(v);\n};\n\nvar isAnimationControls = function isAnimationControls(v) {\n  return v instanceof AnimationControls;\n};\n/**\r\n * Set up the context for children motion components.\r\n *\r\n * We also use this opportunity to apply `initial` values\r\n */\n\n\nvar useMotionContext = function useMotionContext(parentContext, controls, values, isStatic, _a) {\n  if (isStatic === void 0) {\n    isStatic = false;\n  }\n\n  var initial = _a.initial,\n      animate = _a.animate,\n      variants = _a.variants,\n      whileTap = _a.whileTap,\n      whileHover = _a.whileHover; // Override initial with that from a parent context, if defined\n\n  if (parentContext.exitProps && parentContext.exitProps.initial !== undefined) {\n    initial = parentContext.exitProps.initial;\n  }\n\n  var initialState;\n\n  if (initial === false && !isAnimationControls(animate)) {\n    initialState = animate;\n  } else if (typeof initial !== \"boolean\") {\n    initialState = initial;\n  } // Track mounted status so children can detect whether they were present during their\n  // parent's first render\n\n\n  var hasMounted = useRef(false); // We propagate this component's ValueAnimationControls *if* we're being provided variants,\n  // if we're being used to control variants, or if we're being passed animation controls.\n  // Otherwise this component should be \"invisible\" to variant propagation. This is a slight concession\n  // to Framer X where every `Frame` is a `motion` component and it might be if we change that in the future\n  // that this restriction is removed.\n\n  var shouldPropagateControls = variants || isVariantLabel(animate) || isVariantLabel(whileTap) || isVariantLabel(whileHover) || isAnimationControls(animate); // If this component's `initial` prop is a variant label, propagate it. Otherwise pass the parent's.\n\n  var targetInitial = isVariantLabel(initialState) ? initialState : parentContext.initial; // If this is a variant tree we need to propagate the `animate` prop in case new children are added after\n  // the tree initially animates.\n\n  var targetAnimate = isVariantLabel(animate) ? animate : parentContext.animate; // Only allow `initial` to trigger context re-renders if this is a `static` component (ie we're on the Framer canvas)\n  // or in another non-animation/interaction environment.\n\n  var initialDependency = isStatic ? targetInitial : null; // Only allow `animate` to trigger context re-renders if it's a variant label. If this is an array of\n  // variant labels there's probably an optimisation to deep-compare but it might be an over-optimisation.\n  // We want to do this as we rely on React's component rendering order each render cycle to determine\n  // the new order of any child components for the `staggerChildren` functionality.\n\n  var animateDependency = shouldPropagateControls && isVariantLabel(targetAnimate) ? targetAnimate : null; // The context to provide to the child. We `useMemo` because although `controls` and `initial` are\n  // unlikely to change, by making the context an object it'll be considered a new value every render.\n  // So all child motion components will re-render as a result.\n\n  var context = useMemo(function () {\n    return {\n      controls: shouldPropagateControls ? controls : parentContext.controls,\n      initial: targetInitial,\n      animate: targetAnimate,\n      values: values,\n      hasMounted: hasMounted\n    };\n  }, [initialDependency, animateDependency]); // Update the `static` property every render. This is unlikely to change but also essentially free.\n\n  context[\"static\"] = isStatic; // Set initial state. If this is a static component (ie in Framer canvas), respond to updates\n  // in `initial`.\n\n  useMaxTimes(function () {\n    var initialToApply = initialState || parentContext.initial;\n    initialToApply && controls.apply(initialToApply);\n  }, isStatic ? Infinity : 1);\n  useEffect(function () {\n    hasMounted.current = true;\n  }, []);\n  return context;\n};\n/**\r\n * Creates an imperative set of controls to trigger animations.\r\n *\r\n * This allows a consolidated, uniform API for animations, to be triggered by other APIs like the `animate` prop, or the gesture handlers.\r\n *\r\n * @param values\r\n * @param props\r\n * @param ref\r\n * @param subscribeToParentControls\r\n *\r\n * @internal\r\n */\n\n\nfunction useValueAnimationControls(config, props, subscribeToParentControls, parentContext) {\n  var variants = props.variants,\n      transition = props.transition;\n  var parentControls = useContext(MotionContext).controls;\n  var controls = useConstant(function () {\n    return new ValueAnimationControls(config);\n  }); // Reset and resubscribe children every render to ensure stagger order is correct\n\n  if (!parentContext || !parentContext.exitProps || !parentContext.exitProps.isExiting) {\n    controls.resetChildren();\n    controls.setProps(props);\n    controls.setVariants(variants);\n    controls.setDefaultTransition(transition);\n\n    if (subscribeToParentControls && parentControls) {\n      parentControls.addChild(controls);\n    }\n  }\n\n  useEffect(function () {\n    return function () {\n      // Remove reference to onAnimationComplete from controls. All the MotionValues\n      // are unsubscribed from this component separately. We let animations run out\n      // as they might be animating other components.\n      var onAnimationComplete = props.onAnimationComplete,\n          unmountProps = __rest(props, [\"onAnimationComplete\"]);\n\n      controls.setProps(unmountProps);\n      parentControls && parentControls.removeChild(controls);\n    };\n  }, []);\n  return controls;\n}\n\nvar checkShouldInheritVariant = function checkShouldInheritVariant(_a) {\n  var animate = _a.animate,\n      variants = _a.variants,\n      _b = _a.inherit,\n      inherit = _b === void 0 ? true : _b;\n  return inherit && !!variants && (!animate || animate instanceof AnimationControls);\n};\n/**\r\n * @internal\r\n */\n\n\nvar createMotionComponent = function createMotionComponent(_a) {\n  var getValueControlsConfig = _a.getValueControlsConfig,\n      loadFunctionalityComponents = _a.loadFunctionalityComponents,\n      renderComponent = _a.renderComponent;\n\n  function MotionComponent(props, externalRef) {\n    var ref = useRef(null);\n    var parentContext = useContext(MotionContext);\n    var isStatic = parentContext[\"static\"] || props[\"static\"] || false;\n    var values = useMotionValues(props);\n    var style = useMotionStyles(values, props.style, isStatic, props.transformValues);\n    var shouldInheritVariant = checkShouldInheritVariant(props);\n    var controlsConfig = useConstant(function () {\n      return getValueControlsConfig(ref, values);\n    });\n    var controls = useValueAnimationControls(controlsConfig, props, shouldInheritVariant, parentContext);\n    var context = useMotionContext(parentContext, controls, values, isStatic, props);\n    var functionality = isStatic ? null : loadFunctionalityComponents(ref, values, props, parentContext, controls, shouldInheritVariant);\n    var renderedComponent = renderComponent(ref, style, values, props, isStatic);\n    return createElement(Fragment, null, createElement(MountRef, {\n      ref: ref,\n      externalRef: externalRef,\n      values: values,\n      isStatic: isStatic\n    }), functionality, createElement(MotionContext.Provider, {\n      value: context\n    }, renderedComponent));\n  }\n\n  return forwardRef(MotionComponent);\n};\n/**\r\n * @internal\r\n */\n\n\nvar htmlElements = [\"a\", \"abbr\", \"address\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"bdi\", \"bdo\", \"big\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"pre\", \"progress\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"small\", \"source\", \"span\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"u\", \"ul\", \"var\", \"video\", \"wbr\", \"webview\"];\n/**\r\n * @internal\r\n */\n\nvar svgElements = [\"animate\", \"circle\", \"clipPath\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feDropShadow\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"foreignObject\", \"g\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\", \"stop\", \"svg\", \"switch\", \"symbol\", \"text\", \"textPath\", \"tspan\", \"use\", \"view\"];\n/** @public */\n\nvar Point;\n\n(function (Point) {\n  /** @beta */\n  Point.subtract = function (a, b) {\n    return {\n      x: a.x - b.x,\n      y: a.y - b.y\n    };\n  };\n  /** @beta */\n\n\n  Point.relativeTo = function (idOrElem) {\n    var elem;\n\n    var getElem = function getElem() {\n      // Caching element here could be leaky because of React lifecycle\n      if (elem !== undefined) return elem;\n\n      if (typeof idOrElem === \"string\") {\n        elem = document.getElementById(idOrElem);\n      } else {\n        elem = idOrElem;\n      }\n\n      return elem;\n    };\n\n    return function (_a) {\n      var x = _a.x,\n          y = _a.y;\n      var localElem = getElem();\n      if (!localElem) return undefined;\n      var rect = localElem.getBoundingClientRect();\n      return {\n        x: x - rect.left - window.scrollX,\n        y: y - rect.top - window.scrollY\n      };\n    };\n  };\n})(Point || (Point = {}));\n/**\r\n * @internal\r\n */\n\n\nvar MotionPluginContext = createContext({\n  transformPagePoint: function transformPagePoint(p) {\n    return p;\n  }\n});\n/**\r\n * @internal\r\n * @internalremarks For now I think this should remain a private API for our own use\r\n * until we can figure out a nicer way of allowing people to add these\r\n */\n\nfunction MotionPlugins(_a) {\n  var children = _a.children,\n      props = __rest(_a, [\"children\"]);\n\n  var pluginContext = useContext(MotionPluginContext);\n  var value = useRef(__assign({}, pluginContext)).current; // Mutative to prevent triggering rerenders in all listening\n  // components every time this component renders\n\n  for (var key in props) {\n    value[key] = props[key];\n  }\n\n  return createElement(MotionPluginContext.Provider, {\n    value: value\n  }, children);\n}\n\nvar isViewportScrollBlocked = false;\nvar isBrowser = typeof window !== \"undefined\";\n\nif (isBrowser) {\n  document.addEventListener(\"touchmove\", function (event) {\n    if (isViewportScrollBlocked) {\n      event.preventDefault();\n    }\n  }, {\n    passive: false\n  });\n}\n\nvar blockViewportScroll = function blockViewportScroll() {\n  return isViewportScrollBlocked = true;\n};\n\nvar unblockViewportScroll = function unblockViewportScroll() {\n  return isViewportScrollBlocked = false;\n};\n\nfunction isMouseEvent(event) {\n  // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n  if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n    return !!(event.pointerType === \"mouse\");\n  }\n\n  return event instanceof MouseEvent;\n}\n\nfunction isTouchEvent(event) {\n  var hasTouches = !!event.touches;\n  return hasTouches;\n}\n\nfunction useUnmountEffect(callback) {\n  return useEffect(function () {\n    return function () {\n      return callback();\n    };\n  }, []);\n}\n\nfunction addDomEvent(target, eventName, handler, options) {\n  if (!handler) return;\n  target.addEventListener(eventName, handler, options);\n  return function () {\n    return target.removeEventListener(eventName, handler, options);\n  };\n}\n/**\r\n * Attaches an event listener directly to the provided DOM element.\r\n *\r\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\r\n * event handlers.\r\n *\r\n * ```jsx\r\n * const ref = useRef(null)\r\n *\r\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\r\n *\r\n * return <div ref={ref} />\r\n * ```\r\n *\r\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\r\n * @param eventName - Name of the event you want listen for.\r\n * @param handler - Function to fire when receiving the event.\r\n * @param options - Options to pass to `Event.addEventListener`.\r\n *\r\n * @public\r\n */\n\n\nfunction useDomEvent(ref, eventName, handler, options) {\n  useEffect(function () {\n    var element = ref.current;\n\n    if (handler && element) {\n      return addDomEvent(element, eventName, handler, options);\n    }\n  }, [ref, eventName, handler, options]);\n}\n/**\r\n * Filters out events not attached to the primary pointer (currently left mouse button)\r\n * @param eventHandler\r\n */\n\n\nfunction filterPrimaryPointer(eventHandler) {\n  if (!eventHandler) return undefined;\n  return function (event) {\n    var isMouseEvent = event instanceof MouseEvent;\n    var isPrimaryPointer = !isMouseEvent || isMouseEvent && event.button === 0;\n\n    if (isPrimaryPointer) {\n      eventHandler(event);\n    }\n  };\n}\n\nvar defaultPagePoint = {\n  pageX: 0,\n  pageY: 0\n};\n\nfunction pointFromTouch(e) {\n  var primaryTouch = e.touches[0] || e.changedTouches[0];\n\n  var _a = primaryTouch || defaultPagePoint,\n      pageX = _a.pageX,\n      pageY = _a.pageY;\n\n  return {\n    x: pageX,\n    y: pageY\n  };\n}\n\nfunction pointFromMouse(_a) {\n  var _b = _a.pageX,\n      pageX = _b === void 0 ? 0 : _b,\n      _c = _a.pageY,\n      pageY = _c === void 0 ? 0 : _c;\n  return {\n    x: pageX,\n    y: pageY\n  };\n}\n\nfunction extractEventInfo(event) {\n  return {\n    point: isTouchEvent(event) ? pointFromTouch(event) : pointFromMouse(event)\n  };\n}\n\nvar wrapHandler = function wrapHandler(handler, shouldFilterPrimaryPointer) {\n  if (shouldFilterPrimaryPointer === void 0) {\n    shouldFilterPrimaryPointer = false;\n  }\n\n  if (!handler) return;\n\n  var listener = function listener(event) {\n    return handler(event, extractEventInfo(event));\n  };\n\n  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;\n};\n\nvar isBrowser$1 = typeof window !== \"undefined\"; // We check for event support via functions in case they've been mocked by a testing suite.\n\nvar supportsPointerEvents = function supportsPointerEvents() {\n  return isBrowser$1 && window.onpointerdown === null;\n};\n\nvar supportsTouchEvents = function supportsTouchEvents() {\n  return isBrowser$1 && window.ontouchstart === null;\n};\n\nvar supportsMouseEvents = function supportsMouseEvents() {\n  return isBrowser$1 && window.onmousedown === null;\n};\n\nvar mouseEventNames = {\n  pointerdown: \"mousedown\",\n  pointermove: \"mousemove\",\n  pointerup: \"mouseup\",\n  pointercancel: \"mousecancel\",\n  pointerover: \"mouseover\",\n  pointerout: \"mouseout\",\n  pointerenter: \"mouseenter\",\n  pointerleave: \"mouseleave\"\n};\nvar touchEventNames = {\n  pointerdown: \"touchstart\",\n  pointermove: \"touchmove\",\n  pointerup: \"touchend\",\n  pointercancel: \"touchcancel\"\n};\n\nfunction getPointerEventName(name) {\n  if (supportsPointerEvents()) {\n    return name;\n  } else if (supportsTouchEvents()) {\n    return touchEventNames[name];\n  } else if (supportsMouseEvents()) {\n    return mouseEventNames[name];\n  }\n\n  return name;\n}\n\nfunction addPointerEvent(target, eventName, handler, options) {\n  return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction usePointerEvent(ref, eventName, handler, options) {\n  return useDomEvent(ref, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction startDevicePoint(session) {\n  return session.pointHistory[0];\n}\n\nfunction lastDevicePoint(session) {\n  return session.pointHistory[session.pointHistory.length - 1];\n}\n\nfunction getVelocity$1(session, timeDelta) {\n  var pointHistory = session.pointHistory;\n\n  if (pointHistory.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var i = pointHistory.length - 1;\n  var timestampedPoint = null;\n  var lastPoint = lastDevicePoint(session);\n\n  while (i >= 0) {\n    timestampedPoint = pointHistory[i];\n\n    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {\n      break;\n    }\n\n    i--;\n  }\n\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n\n  return currentVelocity;\n}\n/**\r\n *\r\n * @param handlers -\r\n * @param ref -\r\n *\r\n * @internalremarks\r\n * Currently this sets new pan gesture functions every render. The memo route has been explored\r\n * in the past but ultimately we're still creating new functions every render. An optimisation\r\n * to explore is creating the pan gestures and loading them into a `ref`.\r\n *\r\n * @internal\r\n */\n\n\nfunction usePanGesture(_a, ref) {\n  var onPan = _a.onPan,\n      onPanStart = _a.onPanStart,\n      onPanEnd = _a.onPanEnd,\n      onPanSessionStart = _a.onPanSessionStart;\n  var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n  var session = useRef(null);\n  var lastMoveEvent = useRef(null);\n  var lastMoveEventInfo = useRef(null);\n  var transformPagePoint = useContext(MotionPluginContext).transformPagePoint;\n  var pointerEventSubscription = useRef(null); // Load the callbacks into mutable state to ensure that even if we don't create a new\n  // gesture handler every render, we still reference the latest callbacks (which are almost certain to change per render)\n\n  var handlers = useRef({}).current;\n  handlers.onPanSessionStart = onPanSessionStart;\n  handlers.onPanStart = onPanStart;\n  handlers.onPan = onPan;\n  handlers.onPanEnd = onPanEnd;\n\n  function removePointerEvents() {\n    pointerEventSubscription.current && pointerEventSubscription.current();\n    pointerEventSubscription.current = null;\n  }\n\n  function getPanInfo(_a) {\n    var point = _a.point;\n    var currentPoint = session.current; // TODO: A potential optimisation here that might be a breaking change would be\n    // to keep one mutable ref to a point that we update\n\n    return {\n      point: point,\n      delta: Point.subtract(point, lastDevicePoint(currentPoint)),\n      offset: Point.subtract(point, startDevicePoint(currentPoint)),\n      velocity: getVelocity$1(currentPoint, 0.1)\n    };\n  }\n\n  function transformPoint(info) {\n    return {\n      point: transformPagePoint(info.point)\n    };\n  }\n\n  function cancelPan() {\n    removePointerEvents();\n    cancelSync.update(updatePoint);\n    unblockViewportScroll();\n  }\n\n  function updatePoint() {\n    if (!session.current || !lastMoveEvent.current || !lastMoveEventInfo.current) {\n      warning(false, \"onPointerMove fired without pointer session\");\n      cancelPan();\n      return;\n    }\n\n    var info = getPanInfo(lastMoveEventInfo.current);\n    var panStarted = session.current.startEvent !== undefined; // Only start panning if the offset is larger than 3 pixels. If we make it\n    // any larger than this we'll want to reset the pointer history\n    // on the first update to avoid visual snapping to the cursoe.\n\n    var distancePastThreshold = distance(info.offset, {\n      x: 0,\n      y: 0\n    }) >= 3;\n    if (!panStarted && !distancePastThreshold) return;\n    var point = info.point;\n    var timestamp = getFrameData().timestamp;\n    session.current.pointHistory.push(__assign({}, point, {\n      timestamp: timestamp\n    }));\n\n    if (!panStarted) {\n      handlers.onPanStart && handlers.onPanStart(lastMoveEvent.current, info);\n      session.current.startEvent = lastMoveEvent.current;\n    }\n\n    handlers.onPan && handlers.onPan(lastMoveEvent.current, info);\n  }\n\n  function onPointerMove(event, info) {\n    lastMoveEvent.current = event;\n    lastMoveEventInfo.current = transformPoint(info); // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n\n    if (isMouseEvent(event) && event.buttons === 0) {\n      onPointerUp(event, info);\n      return;\n    } // Throttle mouse move event to once per frame\n\n\n    sync.update(updatePoint, true);\n  }\n\n  function onPointerUp(event, info) {\n    cancelPan();\n\n    if (!session.current) {\n      warning(false, \"onPointerUp fired without pointer session\");\n      return;\n    }\n\n    handlers.onPanEnd && handlers.onPanEnd(event, getPanInfo(transformPoint(info)));\n    session.current = null;\n  }\n\n  function onPointerDown(event, info) {\n    // If we have more than one touch, don't start detecting this gesture\n    if (isTouchEvent(event) && event.touches.length > 1) return;\n    var initialInfo = transformPoint(info);\n    var point = initialInfo.point;\n    var timestamp = getFrameData().timestamp;\n    session.current = {\n      target: event.target,\n      pointHistory: [__assign({}, point, {\n        timestamp: timestamp\n      })]\n    };\n    handlers.onPanSessionStart && handlers.onPanSessionStart(event, getPanInfo(initialInfo));\n    removePointerEvents();\n    var removeOnPointerMove = addPointerEvent(window, \"pointermove\", onPointerMove);\n    var removeOnPointerUp = addPointerEvent(window, \"pointerup\", onPointerUp);\n\n    pointerEventSubscription.current = function () {\n      removeOnPointerMove && removeOnPointerMove();\n      removeOnPointerUp && removeOnPointerUp();\n    };\n  }\n\n  usePointerEvent(ref, \"pointerdown\", hasPanEvents && onPointerDown);\n  useUnmountEffect(cancelPan);\n}\n/**\r\n * Recursively traverse up the tree to check whether the provided child node\r\n * is the parent or a descendant of it.\r\n *\r\n * @param parent - Element to find\r\n * @param child - Element to test against parent\r\n */\n\n\nvar isNodeOrChild = function isNodeOrChild(parent, child) {\n  if (!child) {\n    return false;\n  } else if (parent === child) {\n    return true;\n  } else {\n    return isNodeOrChild(parent, child.parentElement);\n  }\n};\n\nvar order = [\"whileHover\", \"whileTap\", \"whileDrag\"];\n\nvar getGesturePriority = function getGesturePriority(gesture) {\n  return order.indexOf(gesture) + 1;\n};\n\nfunction createLock(name) {\n  var lock = null;\n  return function () {\n    var openLock = function openLock() {\n      lock = null;\n    };\n\n    if (lock === null) {\n      lock = name;\n      return openLock;\n    }\n\n    return false;\n  };\n}\n\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\nvar globalVerticalLock = createLock(\"dragVertical\");\n\nfunction getGlobalLock(drag) {\n  var lock = false;\n\n  if (drag === \"y\") {\n    lock = globalVerticalLock();\n  } else if (drag === \"x\") {\n    lock = globalHorizontalLock();\n  } else {\n    var openHorizontal_1 = globalHorizontalLock();\n    var openVertical_1 = globalVerticalLock();\n\n    if (openHorizontal_1 && openVertical_1) {\n      lock = function lock() {\n        openHorizontal_1();\n        openVertical_1();\n      };\n    } else {\n      // Release the locks because we don't use them\n      if (openHorizontal_1) openHorizontal_1();\n      if (openVertical_1) openVertical_1();\n    }\n  }\n\n  return lock;\n}\n\nvar tapGesturePriority = getGesturePriority(\"whileTap\");\n/**\r\n * @param handlers -\r\n * @internal\r\n */\n\nfunction useTapGesture(_a, ref) {\n  var onTap = _a.onTap,\n      onTapStart = _a.onTapStart,\n      onTapCancel = _a.onTapCancel,\n      whileTap = _a.whileTap,\n      controls = _a.controls;\n  var hasTapListeners = onTap || onTapStart || onTapCancel || whileTap;\n  var isTapping = useRef(false);\n  var cancelPointerEventListener = useRef(null);\n\n  function removePointerUp() {\n    cancelPointerEventListener.current && cancelPointerEventListener.current();\n    cancelPointerEventListener.current = null;\n  }\n\n  if (whileTap && controls) {\n    controls.setOverride(whileTap, tapGesturePriority);\n  } // We load this event handler into a ref so we can later refer to\n  // onPointerUp.current which will always have reference to the latest props\n\n\n  var onPointerUp = useRef(null);\n\n  onPointerUp.current = function (event, info) {\n    var element = ref.current;\n    removePointerUp();\n    if (!isTapping.current || !element) return;\n    isTapping.current = false;\n\n    if (controls && whileTap) {\n      controls.clearOverride(tapGesturePriority);\n    } // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n\n\n    var openGestureLock = getGlobalLock(true);\n    if (!openGestureLock) return;\n    openGestureLock();\n\n    if (!isNodeOrChild(element, event.target)) {\n      onTapCancel && onTapCancel(event, info);\n    } else {\n      onTap && onTap(event, info);\n    }\n  };\n\n  function onPointerDown(event, info) {\n    removePointerUp();\n    cancelPointerEventListener.current = addPointerEvent(window, \"pointerup\", function (event, info) {\n      return onPointerUp.current(event, info);\n    });\n    var element = ref.current;\n    if (!element || isTapping.current) return;\n    isTapping.current = true;\n    onTapStart && onTapStart(event, info);\n\n    if (controls && whileTap) {\n      controls.startOverride(tapGesturePriority);\n    }\n  }\n\n  usePointerEvent(ref, \"pointerdown\", hasTapListeners ? onPointerDown : undefined);\n  useUnmountEffect(removePointerUp);\n}\n\nvar hoverPriority = getGesturePriority(\"whileHover\");\n\nvar filterTouch = function filterTouch(listener) {\n  return function (event, info) {\n    if (isMouseEvent(event)) listener(event, info);\n  };\n};\n/**\r\n *\r\n * @param props\r\n * @param ref\r\n * @internal\r\n */\n\n\nfunction useHoverGesture(_a, ref) {\n  var whileHover = _a.whileHover,\n      onHoverStart = _a.onHoverStart,\n      onHoverEnd = _a.onHoverEnd,\n      controls = _a.controls;\n\n  if (whileHover && controls) {\n    controls.setOverride(whileHover, hoverPriority);\n  }\n\n  usePointerEvent(ref, \"pointerenter\", filterTouch(function (event, info) {\n    if (onHoverStart) onHoverStart(event, info);\n\n    if (whileHover && controls) {\n      controls.startOverride(hoverPriority);\n    }\n  }));\n  usePointerEvent(ref, \"pointerleave\", filterTouch(function (event, info) {\n    if (onHoverEnd) onHoverEnd(event, info);\n\n    if (whileHover && controls) {\n      controls.clearOverride(hoverPriority);\n    }\n  }));\n}\n/**\r\n * Add pan and tap gesture recognition to an element.\r\n *\r\n * @param props - Gesture event handlers\r\n * @param ref - React `ref` containing a DOM `Element`\r\n * @public\r\n */\n\n\nfunction useGestures(props, ref) {\n  usePanGesture(props, ref);\n  useTapGesture(props, ref);\n  useHoverGesture(props, ref);\n}\n\nvar makeRenderlessComponent = function makeRenderlessComponent(hook) {\n  return function (props) {\n    hook(props);\n    return null;\n  };\n};\n\nvar gestureProps = [\"drag\", \"onPan\", \"onPanStart\", \"onPanEnd\", \"onPanSessionStart\", \"onTap\", \"onTapStart\", \"onTapCancel\", \"whileTap\", \"whileHover\", \"onHoverStart\", \"onHoverEnd\"];\nvar Gestures = {\n  key: \"gestures\",\n  shouldRender: function shouldRender(props) {\n    return gestureProps.some(function (key) {\n      return props.hasOwnProperty(key);\n    });\n  },\n  Component: makeRenderlessComponent(function (_a) {\n    var innerRef = _a.innerRef,\n        props = __rest(_a, [\"innerRef\"]);\n\n    useGestures(props, innerRef);\n  })\n};\n/**\r\n * A hook to use the window resize listener. In future it might be cool to use `ResizeObserver`\r\n * but it currently needs to be polyfilled and the size trade-off isn't there for this use-case.\r\n *\r\n * TODO: Debounce this bad boy\r\n *\r\n * @param onResize\r\n */\n\nfunction useResize(element, onResize) {\n  useEffect(function () {\n    if (!element || !isRefObject(element)) return;\n    window.addEventListener(\"resize\", onResize);\n    return function () {\n      return window.removeEventListener(\"resize\", onResize);\n    };\n  }, [element, onResize]);\n}\n/**\r\n * Creates a `MotionValue` to track the state and velocity of a value.\r\n *\r\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * export function MyComponent() {\r\n *   const scale = useMotionValue(1)\r\n *\r\n *   return <Frame scale={scale} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const scale = useMotionValue(1)\r\n *\r\n *   return <motion.div style={{ scale }} />\r\n * }\r\n * ```\r\n *\r\n * @param initial - The initial state.\r\n *\r\n * @public\r\n */\n\n\nfunction useMotionValue(initial) {\n  return useConstant(function () {\n    return motionValue(initial);\n  });\n}\n/**\r\n * Don't block the default pointerdown behaviour of these elements.\r\n */\n\n\nvar allowDefaultPointerDown = new Set([\"INPUT\", \"TEXTAREA\", \"SELECT\"]);\n\nvar getBoundingBox = function getBoundingBox(ref, transformPagePoint) {\n  var rect = ref.current.getBoundingClientRect();\n\n  var _a = transformPagePoint({\n    x: rect.left,\n    y: rect.top\n  }),\n      left = _a.x,\n      top = _a.y;\n\n  var _b = transformPagePoint({\n    x: rect.width,\n    y: rect.height\n  }),\n      width = _b.x,\n      height = _b.y;\n\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n};\n\nvar getCurrentOffset = function getCurrentOffset(point) {\n  return point ? point.get() : 0;\n};\n/**\r\n * Takes a parent Element and a draggable Element and returns pixel-based drag constraints.\r\n *\r\n * @param constraintsRef\r\n * @param draggableRef\r\n */\n\n\nvar calculateConstraintsFromDom = function calculateConstraintsFromDom(constraintsRef, draggableRef, point, transformPagePoint) {\n  invariant(constraintsRef.current !== null && draggableRef.current !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n  var parentBoundingBox = getBoundingBox(constraintsRef, transformPagePoint);\n  var draggableBoundingBox = getBoundingBox(draggableRef, transformPagePoint);\n  var left = parentBoundingBox.left - draggableBoundingBox.left + getCurrentOffset(point.x);\n  var top = parentBoundingBox.top - draggableBoundingBox.top + getCurrentOffset(point.y);\n  var right = parentBoundingBox.width - draggableBoundingBox.width + left;\n  var bottom = parentBoundingBox.height - draggableBoundingBox.height + top;\n  return {\n    top: top,\n    left: left,\n    right: right,\n    bottom: bottom\n  };\n};\n\nfunction shouldDrag(direction, drag, currentDirection) {\n  return (drag === true || drag === direction) && (currentDirection === null || currentDirection === direction);\n}\n\nvar getConstraints = function getConstraints(axis, _a) {\n  var top = _a.top,\n      right = _a.right,\n      bottom = _a.bottom,\n      left = _a.left;\n\n  if (axis === \"x\") {\n    return {\n      min: left,\n      max: right\n    };\n  } else {\n    return {\n      min: top,\n      max: bottom\n    };\n  }\n};\n\nfunction applyConstraints(axis, value, constraints, dragElastic) {\n  var constrainedValue = value instanceof MotionValue ? value.get() : value;\n\n  if (!constraints) {\n    return constrainedValue;\n  }\n\n  var _a = getConstraints(axis, constraints),\n      min = _a.min,\n      max = _a.max;\n\n  if (min !== undefined && constrainedValue < min) {\n    constrainedValue = dragElastic ? applyOverdrag(min, constrainedValue, dragElastic) : Math.max(min, constrainedValue);\n  } else if (max !== undefined && constrainedValue > max) {\n    constrainedValue = dragElastic ? applyOverdrag(max, constrainedValue, dragElastic) : Math.min(max, constrainedValue);\n  }\n\n  if (value instanceof MotionValue) {\n    value.set(constrainedValue);\n  }\n\n  return constrainedValue;\n}\n\nfunction applyOverdrag(origin, current, dragElastic) {\n  var dragFactor = typeof dragElastic === \"number\" ? dragElastic : 0.35;\n  return mix(origin, current, dragFactor);\n}\n\nfunction bothAxis(handler) {\n  return [handler(\"x\"), handler(\"y\")];\n}\n/**\r\n * A hook that allows an element to be dragged.\r\n *\r\n * @param param\r\n * @param ref\r\n * @param values\r\n * @param controls\r\n *\r\n * @internal\r\n */\n\n\nfunction useDrag(_a, ref, values, controls) {\n  var _b = _a.drag,\n      drag = _b === void 0 ? false : _b,\n      _c = _a.dragDirectionLock,\n      dragDirectionLock = _c === void 0 ? false : _c,\n      _d = _a.dragPropagation,\n      dragPropagation = _d === void 0 ? false : _d,\n      _e = _a.dragConstraints,\n      dragConstraints = _e === void 0 ? false : _e,\n      _f = _a.dragElastic,\n      dragElastic = _f === void 0 ? true : _f,\n      _g = _a.dragMomentum,\n      dragMomentum = _g === void 0 ? true : _g,\n      _dragValueX = _a._dragValueX,\n      _dragValueY = _a._dragValueY,\n      _dragTransitionControls = _a._dragTransitionControls,\n      dragOriginX = _a.dragOriginX,\n      dragOriginY = _a.dragOriginY,\n      dragTransition = _a.dragTransition,\n      onDirectionLock = _a.onDirectionLock,\n      onDragStart = _a.onDragStart,\n      onDrag = _a.onDrag,\n      onDragEnd = _a.onDragEnd,\n      onDragTransitionEnd = _a.onDragTransitionEnd; // If `dragConstraints` is a React `ref`, we should resolve the constraints once the\n  // component has rendered.\n\n  var constraintsNeedResolution = isRefObject(dragConstraints); // We create a mutable state using a ref as we want to keep track of certain data, even across renders,\n  // but we don't want to re-render as a result of them.\n\n  var dragStatus = useRef({\n    isDragging: false,\n    currentDirection: null,\n    constraints: false,\n    handlers: {}\n  }).current; // Load the callbacks into mutable state to ensure that even if we don't create a new\n  // gesture handler every render, we still reference the latest callbacks (which are almost certain to change per render)\n\n  var handlers = dragStatus.handlers;\n  handlers.onDragStart = onDragStart;\n  handlers.onDrag = onDrag;\n  handlers.onDragEnd = onDragEnd;\n  handlers.onDirectionLock = onDirectionLock;\n  handlers.onDragTransitionEnd = onDragTransitionEnd;\n  var point = useRef({}).current; // Track origin\n\n  var defaultOriginX = useMotionValue(0);\n  var defaultOriginY = useMotionValue(0);\n  var origin = {\n    x: dragOriginX || defaultOriginX,\n    y: dragOriginY || defaultOriginY\n  }; // This is a reference to the global drag gesture lock, ensuring only one component\n  // can \"capture\" the drag of one or both axes.\n\n  var openGlobalLock = useRef(null);\n  var transformPagePoint = useContext(MotionPluginContext).transformPagePoint; // If `dragConstraints` is a React `ref`, we need to track changes in its\n  // size and update the current draggable position relative to that.\n\n  var prevConstraintsBox = useRef({\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0\n  }).current;\n\n  var scalePoint = function scalePoint() {\n    if (!isRefObject(dragConstraints)) return;\n    var constraintsBox = getBoundingBox(dragConstraints, transformPagePoint);\n    var draggableBox = getBoundingBox(ref, transformPagePoint); // Scale a point relative to the transformation of a constraints-providing element.\n\n    var scaleAxisPoint = function scaleAxisPoint(axis, dimension) {\n      var pointToScale = point[axis];\n      if (!pointToScale) return; // Stop any current animations as they bug out if you resize during one\n\n      if (pointToScale.isAnimating()) {\n        pointToScale.stop();\n        recordBoxInfo();\n        return;\n      } // If the previous dimension was `0` (default), set `scale` to `1` to prevent\n      // divide by zero errors.\n\n\n      var scale = prevConstraintsBox[dimension] ? (constraintsBox[dimension] - draggableBox[dimension]) / prevConstraintsBox[dimension] : 1;\n      pointToScale.set(prevConstraintsBox[axis] * scale);\n    };\n\n    scaleAxisPoint(\"x\", \"width\");\n    scaleAxisPoint(\"y\", \"height\");\n  };\n\n  useResize(dragConstraints, scalePoint); // If our drag constraints are a potentially live bounding box, record its previously-calculated\n  // dimensions and the current x/y\n\n  var recordBoxInfo = function recordBoxInfo(constraints) {\n    if (constraints) {\n      var right = constraints.right,\n          left = constraints.left,\n          bottom = constraints.bottom,\n          top_1 = constraints.top;\n      prevConstraintsBox.width = (right || 0) - (left || 0);\n      prevConstraintsBox.height = (bottom || 0) - (top_1 || 0);\n    }\n\n    if (point.x) prevConstraintsBox.x = point.x.get();\n    if (point.y) prevConstraintsBox.y = point.y.get();\n  };\n\n  var applyConstraintsToPoint = function applyConstraintsToPoint(constraints) {\n    return bothAxis(function (axis) {\n      var axisPoint = point[axis];\n      axisPoint && !axisPoint.isAnimating() && applyConstraints(axis, axisPoint, constraints, 0);\n    });\n  }; // On mount, if our bounding box is a ref, we need to resolve the constraints\n  // and immediately apply them to our point.\n\n\n  useEffect(function () {\n    if (!constraintsNeedResolution) return;\n    var constraints = calculateConstraintsFromDom(dragConstraints, ref, point, transformPagePoint);\n    applyConstraintsToPoint(constraints);\n    recordBoxInfo(constraints);\n  }, []); // If `dragConstraints` is set to `false` or `Constraints`, set constraints immediately.\n  // Otherwise we'll resolve on mount.\n\n  dragStatus.constraints = constraintsNeedResolution ? dragStatus.constraints || false : dragConstraints; // Get the `MotionValue` for both draggable axes, or create them if they don't already\n  // exist on this component.\n\n  bothAxis(function (axis) {\n    if (!shouldDrag(axis, drag, dragStatus.currentDirection)) return;\n    var defaultValue = axis === \"x\" ? _dragValueX : _dragValueY;\n    point[axis] = defaultValue || values.get(axis, 0);\n  }); // Apply constraints immediately, even before render, if our constraints are a plain object.\n\n  if (!dragStatus.isDragging && dragStatus.constraints && !constraintsNeedResolution) {\n    applyConstraintsToPoint(dragStatus.constraints);\n  } // Add additional information to the `PanInfo` object before passing it to drag listeners.\n\n\n  function convertPanToDrag(info) {\n    return __assign({}, info, {\n      point: {\n        x: point.x ? point.x.get() : 0,\n        y: point.y ? point.y.get() : 0\n      }\n    });\n  } // This function will be used to update each axis point every frame.\n\n\n  function updatePoint(axis, offset) {\n    var axisPoint = point[axis]; // If we're not dragging this axis, do an early return.\n\n    if (!shouldDrag(axis, drag, dragStatus.currentDirection) || !axisPoint) {\n      return;\n    }\n\n    var current = applyConstraints(axis, origin[axis].get() + offset[axis], dragStatus.constraints, dragElastic);\n    axisPoint.set(current);\n  }\n\n  function onPanSessionStart(event) {\n    if (event.target && !allowDefaultPointerDown.has(event.target.tagName)) {\n      // On iOS it's important to not `preventDefault` the `touchstart`\n      // event, as otherwise clicks won't fire inside the draggable element.\n      if (!supportsTouchEvents()) {\n        // Prevent browser-specific behaviours like text selection or Chrome's image dragging.\n        event.preventDefault(); // Make sure input elements loose focus when we prevent the default.\n\n        if (document.activeElement instanceof HTMLElement) {\n          document.activeElement.blur();\n        }\n      }\n    } // Initiate viewport scroll blocking on touch start. This is a very aggressive approach\n    // which has come out of the difficulty in us being able to do this once a scroll gesture\n    // has initiated in mobile browsers. This means if there's a horizontally-scrolling carousel\n    // on a page we can't let a user scroll the page itself from it. Ideally what we'd do is\n    // trigger this once we've got a scroll direction determined. This approach sort-of worked\n    // but if the component was dragged too far in a single frame page scrolling would initiate.\n\n\n    blockViewportScroll(); // Stop any animations on both axis values immediately. This allows the user to throw and catch\n    // the component.\n\n    bothAxis(function (axis) {\n      var axisPoint = point[axis];\n      axisPoint && axisPoint.stop();\n    });\n  }\n\n  function onPanStart(event, info) {\n    dragStatus.isDragging = true; // Resolve the constraints again in case anything has changed in the meantime.\n\n    if (constraintsNeedResolution) {\n      dragStatus.constraints = calculateConstraintsFromDom(dragConstraints, ref, point, transformPagePoint);\n      applyConstraintsToPoint(dragStatus.constraints);\n    } // Set point origin and stop any existing animations.\n\n\n    bothAxis(function (axis) {\n      var axisPoint = point[axis];\n      if (!axisPoint) return;\n      origin[axis].set(axisPoint.get());\n      axisPoint.stop();\n    }); // Attempt to grab the global drag gesture lock.\n\n    if (!dragPropagation) {\n      if (openGlobalLock.current) openGlobalLock.current();\n      openGlobalLock.current = getGlobalLock(drag);\n\n      if (!openGlobalLock.current) {\n        return;\n      }\n    }\n\n    dragStatus.currentDirection = null;\n    var onDragStart = handlers.onDragStart;\n    onDragStart && onDragStart(event, convertPanToDrag(info));\n  }\n\n  function onPan(event, info) {\n    // If we didn't successfully receive the gesture lock, early return.\n    if (!dragPropagation && !openGlobalLock.current) {\n      return;\n    }\n\n    var offset = info.offset; // Attempt to detect drag direction if directionLock is true\n\n    if (dragDirectionLock && dragStatus.currentDirection === null) {\n      dragStatus.currentDirection = getCurrentDirection(offset); // If we've successfully set a direction, notify listener\n\n      if (dragStatus.currentDirection !== null) {\n        var onDirectionLock_1 = handlers.onDirectionLock;\n        onDirectionLock_1 && onDirectionLock_1(dragStatus.currentDirection);\n      }\n\n      return;\n    }\n\n    updatePoint(\"x\", offset);\n    updatePoint(\"y\", offset);\n    var onDrag = handlers.onDrag;\n    onDrag && onDrag(event, convertPanToDrag(info));\n  }\n\n  function cancelDrag() {\n    unblockViewportScroll();\n    dragStatus.isDragging = false;\n\n    if (!dragPropagation && openGlobalLock.current) {\n      openGlobalLock.current();\n      openGlobalLock.current = null;\n    }\n  }\n\n  function animateDragEnd(velocity) {\n    var momentumAnimations = bothAxis(function (axis) {\n      var _a;\n\n      if (!shouldDrag(axis, drag, dragStatus.currentDirection)) {\n        return;\n      }\n\n      var transition = dragStatus.constraints ? getConstraints(axis, dragStatus.constraints) : {};\n      /**\r\n       * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\r\n       * of spring animations so we should look into adding a disable spring option to `inertia`.\r\n       * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\r\n       * using the value of `dragElastic`.\r\n       */\n\n      var bounceStiffness = dragElastic ? 200 : 1000000;\n      var bounceDamping = dragElastic ? 40 : 10000000;\n      var animationControls = _dragTransitionControls || controls;\n      return animationControls.start((_a = {}, _a[axis] = 0, // TODO: It might be possible to allow `type` animations to be set as\n      // Popmotion animations as well as strings. Then people could define their own\n      // and it'd open another route for us to code-split.\n      _a.transition = __assign({\n        type: \"inertia\",\n        velocity: dragMomentum ? velocity[axis] : 0,\n        bounceStiffness: bounceStiffness,\n        bounceDamping: bounceDamping,\n        timeConstant: 750,\n        restDelta: 1\n      }, dragTransition, transition), _a));\n    }); // Run all animations and then resolve the new drag constraints.\n\n    Promise.all(momentumAnimations).then(function () {\n      recordBoxInfo(dragStatus.constraints);\n      scalePoint();\n      var onDragTransitionEnd = handlers.onDragTransitionEnd;\n      onDragTransitionEnd && onDragTransitionEnd();\n    });\n  }\n\n  function onPanEnd(event, info) {\n    var isDragging = dragStatus.isDragging;\n    cancelDrag();\n    if (!isDragging) return; // If we have either `dragMomentum` or `dragElastic`, initiate momentum and boundary spring animation for both axes.\n\n    if (dragMomentum || dragElastic) {\n      var velocity = info.velocity;\n      animateDragEnd(velocity);\n    } else {\n      recordBoxInfo(dragStatus.constraints);\n    }\n\n    var onDragEnd = handlers.onDragEnd;\n    onDragEnd && onDragEnd(event, convertPanToDrag(info));\n  }\n\n  usePanGesture(drag ? {\n    onPan: onPan,\n    onPanStart: onPanStart,\n    onPanEnd: onPanEnd,\n    onPanSessionStart: onPanSessionStart\n  } : {}, ref);\n  useUnmountEffect(function () {\n    return dragStatus.isDragging && cancelDrag();\n  });\n}\n/**\r\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\r\n * than the provided threshold, return `null`.\r\n *\r\n * @param offset - The x/y offset from origin.\r\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\r\n */\n\n\nfunction getCurrentDirection(offset, lockThreshold) {\n  if (lockThreshold === void 0) {\n    lockThreshold = 10;\n  }\n\n  var direction = null;\n\n  if (Math.abs(offset.y) > lockThreshold) {\n    direction = \"y\";\n  } else if (Math.abs(offset.x) > lockThreshold) {\n    direction = \"x\";\n  }\n\n  return direction;\n}\n\nvar Drag = {\n  key: \"drag\",\n  shouldRender: function shouldRender(props) {\n    return !!props.drag;\n  },\n  Component: makeRenderlessComponent(function (_a) {\n    var innerRef = _a.innerRef,\n        values = _a.values,\n        controls = _a.controls,\n        props = __rest(_a, [\"innerRef\", \"values\", \"controls\"]);\n\n    return useDrag(props, innerRef, values, controls);\n  })\n};\n\nfunction isCSSVariable(value) {\n  return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\r\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\r\n *\r\n * ```\r\n * `var(--foo, #fff)` => [`--foo`, '#fff']\r\n * ```\r\n *\r\n * @param current\r\n */\n\n\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\n\nfunction parseCSSVariable(current) {\n  var match = cssVariableRegex.exec(current);\n  if (!match) return [,];\n  var token = match[1],\n      fallback = match[2];\n  return [token, fallback];\n}\n\nvar maxDepth = 4;\n\nfunction getVariableValue(current, element, depth) {\n  if (depth === void 0) {\n    depth = 1;\n  }\n\n  invariant(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\" + current + \"\\\". This may indicate a circular fallback dependency.\");\n\n  var _a = parseCSSVariable(current),\n      token = _a[0],\n      fallback = _a[1]; // No CSS variable detected\n\n\n  if (!token) return; // Attempt to read this CSS variable off the element\n\n  var resolved = window.getComputedStyle(element).getPropertyValue(token);\n\n  if (resolved) {\n    return resolved;\n  } else if (isCSSVariable(fallback)) {\n    // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n    return getVariableValue(fallback, element, depth + 1);\n  } else {\n    return fallback;\n  }\n}\n/**\r\n * Resolve CSS variables from\r\n *\r\n * @internal\r\n */\n\n\nfunction resolveCSSVariables(values, ref, _a, transitionEnd) {\n  var target = __rest(_a, []);\n\n  var element = ref.current;\n  if (!(element instanceof HTMLElement)) return {\n    target: target,\n    transitionEnd: transitionEnd\n  }; // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n  // only if they change but I think this reads clearer and this isn't a performance-critical path.\n\n  if (transitionEnd) {\n    transitionEnd = __assign({}, transitionEnd);\n  } // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n\n\n  values.forEach(function (value) {\n    var current = value.get();\n    if (!isCSSVariable(current)) return;\n    var resolved = getVariableValue(current, element);\n    if (resolved) value.set(resolved);\n  }); // Cycle through every target property and resolve CSS variables. Currently\n  // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n\n  for (var key in target) {\n    var current = target[key];\n    if (!isCSSVariable(current)) continue;\n    var resolved = getVariableValue(current, element);\n    if (!resolved) continue; // Clone target if it hasn't already been\n\n    target[key] = resolved; // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n    // CSS variable. This will ensure that after the animation the component will reflect\n    // changes in the value of the CSS variable.\n\n    if (transitionEnd && transitionEnd[key] === undefined) {\n      transitionEnd[key] = current;\n    }\n  }\n\n  return {\n    target: target,\n    transitionEnd: transitionEnd\n  };\n}\n\nvar positionalKeys = new Set([\"width\", \"height\", \"top\", \"left\", \"right\", \"bottom\", \"x\", \"y\"]);\n\nvar isPositionalKey = function isPositionalKey(key) {\n  return positionalKeys.has(key);\n};\n\nvar hasPositionalKey = function hasPositionalKey(target) {\n  return Object.keys(target).some(isPositionalKey);\n};\n\nvar setAndResetVelocity = function setAndResetVelocity(value, to) {\n  // Looks odd but setting it twice doesn't render, it'll just\n  // set both prev and current to the latest value\n  value.set(to, false);\n  value.set(to);\n};\n\nvar isNumOrPxType = function isNumOrPxType(v) {\n  return v === number || v === px;\n};\n\nvar BoundingBoxDimension;\n\n(function (BoundingBoxDimension) {\n  BoundingBoxDimension[\"width\"] = \"width\";\n  BoundingBoxDimension[\"height\"] = \"height\";\n  BoundingBoxDimension[\"left\"] = \"left\";\n  BoundingBoxDimension[\"right\"] = \"right\";\n  BoundingBoxDimension[\"top\"] = \"top\";\n  BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\n\nvar getPosFromMatrix = function getPosFromMatrix(matrix, pos) {\n  return parseFloat(matrix.split(\", \")[pos]);\n};\n\nvar getTranslateFromMatrix = function getTranslateFromMatrix(pos2, pos3) {\n  return function (_bbox, _a) {\n    var transform = _a.transform;\n    if (transform === \"none\" || !transform) return 0;\n    var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n\n    if (matrix3d) {\n      return getPosFromMatrix(matrix3d[1], pos3);\n    } else {\n      var matrix = transform.match(/^matrix\\((.+)\\)$/);\n      return getPosFromMatrix(matrix[1], pos2);\n    }\n  };\n};\n\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\nvar nonTranslationalTransformKeys = transformProps.filter(function (key) {\n  return !transformKeys.has(key);\n});\n\nfunction removeNonTranslationalTransform(values, elementStyler) {\n  var removedTransforms = [];\n  nonTranslationalTransformKeys.forEach(function (key) {\n    var value = values.get(key);\n\n    if (value !== undefined) {\n      removedTransforms.push([key, value.get()]);\n      value.set(key.startsWith(\"scale\") ? 1 : 0);\n    }\n  }); // Apply changes to element before measurement\n\n  if (removedTransforms.length) elementStyler.render();\n  return removedTransforms;\n}\n\nvar positionalValues = {\n  // Dimensions\n  width: function width(_a) {\n    var width = _a.width;\n    return width;\n  },\n  height: function height(_a) {\n    var height = _a.height;\n    return height;\n  },\n  top: function top(_bbox, _a) {\n    var top = _a.top;\n    return parseFloat(top);\n  },\n  left: function left(_bbox, _a) {\n    var left = _a.left;\n    return parseFloat(left);\n  },\n  bottom: function bottom(_a, _b) {\n    var height = _a.height;\n    var top = _b.top;\n    return parseFloat(top) + height;\n  },\n  right: function right(_a, _b) {\n    var width = _a.width;\n    var left = _b.left;\n    return parseFloat(left) + width;\n  },\n  // Transform\n  x: getTranslateFromMatrix(4, 13),\n  y: getTranslateFromMatrix(5, 14)\n};\n\nvar convertChangedValueTypes = function convertChangedValueTypes(target, values, element, elementStyler, changedKeys) {\n  var originBbox = element.getBoundingClientRect();\n  var elementComputedStyle = getComputedStyle(element);\n  var display = elementComputedStyle.display,\n      top = elementComputedStyle.top,\n      left = elementComputedStyle.left,\n      bottom = elementComputedStyle.bottom,\n      right = elementComputedStyle.right,\n      transform = elementComputedStyle.transform;\n  var originComputedStyle = {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    transform: transform\n  }; // If the element is currently set to display: \"none\", make it visible before\n  // measuring the target bounding box\n\n  if (display === \"none\") {\n    elementStyler.set(\"display\", target.display || \"block\");\n  } // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n\n\n  elementStyler.render();\n  var targetBbox = element.getBoundingClientRect();\n  changedKeys.forEach(function (key) {\n    // Restore styles to their **calculated computed style**, not their actual\n    // originally set style. This allows us to animate between equivalent pixel units.\n    var value = values.get(key);\n    setAndResetVelocity(value, positionalValues[key](originBbox, originComputedStyle));\n    target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n  });\n  return target;\n};\n\nvar checkAndConvertChangedValueTypes = function checkAndConvertChangedValueTypes(values, ref, target, transitionEnd) {\n  if (transitionEnd === void 0) {\n    transitionEnd = {};\n  }\n\n  target = __assign({}, target);\n  transitionEnd = __assign({}, transitionEnd);\n  var element = ref.current;\n  var elementStyler = styler(element);\n  var targetPositionalKeys = Object.keys(target).filter(isPositionalKey); // We want to remove any transform values that could affect the element's bounding box before\n  // it's measured. We'll reapply these later.\n\n  var removedTransformValues = [];\n  var hasAttemptedToRemoveTransformValues = false;\n  var changedValueTypeKeys = targetPositionalKeys.reduce(function (acc, key) {\n    var value = values.get(key);\n    if (!value) return acc;\n    var from = value.get();\n    var to = target[key];\n    var fromType = getDimensionValueType(from);\n    var toType; // TODO: The current implementation of this basically throws an error\n    // if you try and do value conversion via keyframes. There's probably\n    // a way of doing this but the performance implications would need greater scrutiny,\n    // as it'd be doing multiple resize-remeasure operations.\n\n    if (isKeyframesTarget(to)) {\n      var numKeyframes = to.length;\n\n      for (var i = to[0] === null ? 1 : 0; i < numKeyframes; i++) {\n        if (!toType) {\n          toType = getDimensionValueType(to[i]);\n          invariant(toType === fromType || isNumOrPxType(fromType) && isNumOrPxType(toType), \"Keyframes must be of the same dimension as the current value\");\n        } else {\n          invariant(getDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n        }\n      }\n    } else {\n      toType = getDimensionValueType(to);\n    }\n\n    if (fromType !== toType) {\n      // If they're both just number or px, convert them both to numbers rather than\n      // relying on resize/remeasure to convert (which is wasteful in this situation)\n      if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n        var current = value.get();\n\n        if (typeof current === \"string\") {\n          value.set(parseFloat(current));\n        }\n\n        if (typeof to === \"string\") {\n          target[key] = parseFloat(to);\n        } else if (Array.isArray(to) && toType === px) {\n          target[key] = to.map(parseFloat);\n        }\n      } else {\n        // If we're going to do value conversion via DOM measurements, we first\n        // need to remove non-positional transform values that could affect the bbox measurements.\n        if (!hasAttemptedToRemoveTransformValues) {\n          removedTransformValues = removeNonTranslationalTransform(values, elementStyler);\n          hasAttemptedToRemoveTransformValues = true;\n        }\n\n        acc.push(key);\n        transitionEnd[key] = transitionEnd[key] !== undefined ? transitionEnd[key] : target[key];\n        setAndResetVelocity(value, to);\n      }\n    }\n\n    return acc;\n  }, []);\n\n  if (changedValueTypeKeys.length) {\n    var convertedTarget = convertChangedValueTypes(target, values, element, elementStyler, changedValueTypeKeys); // If we removed transform values, reapply them before the next render\n\n    if (removedTransformValues.length) {\n      removedTransformValues.forEach(function (_a) {\n        var key = _a[0],\n            value = _a[1];\n        values.get(key).set(value);\n      });\n    } // Reapply original values\n\n\n    elementStyler.render();\n    return {\n      target: convertedTarget,\n      transitionEnd: transitionEnd\n    };\n  } else {\n    return {\n      target: target,\n      transitionEnd: transitionEnd\n    };\n  }\n};\n/**\r\n * Convert value types for x/y/width/height/top/left/bottom/right\r\n *\r\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\r\n *\r\n * @param values\r\n * @param ref\r\n * @param target\r\n * @param transitionEnd\r\n * @internal\r\n */\n\n\nfunction unitConversion(values, ref, target, transitionEnd) {\n  return hasPositionalKey(target) ? checkAndConvertChangedValueTypes(values, ref, target, transitionEnd) : {\n    target: target,\n    transitionEnd: transitionEnd\n  };\n}\n\nvar parseDomVariant = function parseDomVariant(values, ref) {\n  return function (target, transitionEnd) {\n    var resolved = resolveCSSVariables(values, ref, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(values, ref, target, transitionEnd);\n  };\n};\n\nfunction useForceUpdate() {\n  var _a = useState(0),\n      forcedRenderCount = _a[0],\n      setForcedRenderCount = _a[1];\n\n  return useCallback(function () {\n    return setForcedRenderCount(forcedRenderCount + 1);\n  }, [forcedRenderCount]);\n}\n\nvar SyncLayoutContext = createContext(null);\n/**\r\n * When layout changes happen asynchronously to their instigating render (ie when exiting\r\n * children of `AnimatePresence` are removed), `SyncLayout` can wrap parent and sibling\r\n * components that need to animate as a result of this layout change.\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const MyComponent = ({ isVisible }) => {\r\n *   return (\r\n *     <SyncLayout>\r\n *       <AnimatePresence>\r\n *         {isVisible && (\r\n *           <motion.div exit={{ opacity: 0 }} />\r\n *         )}\r\n *       </AnimatePresence>\r\n *       <motion.div positionTransition />\r\n *     </SyncLayout>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @internalremarks\r\n *\r\n * The way this component works is by memoising a function and passing it down via context.\r\n * The function, when called, updates the local state, which is used to invalidate the\r\n * memoisation cache. A new function is called, performing a synced re-render of components\r\n * that are using the SyncLayoutContext.\r\n *\r\n * @internal\r\n */\n\nvar UnstableSyncLayout = function UnstableSyncLayout(_a) {\n  var children = _a.children;\n  var forceUpdate = useForceUpdate();\n  return createElement(SyncLayoutContext.Provider, {\n    value: forceUpdate\n  }, children);\n};\n\nvar _a;\n\nvar StepName;\n\n(function (StepName) {\n  StepName[\"Prepare\"] = \"prepare\";\n  StepName[\"Read\"] = \"read\";\n  StepName[\"Render\"] = \"render\";\n})(StepName || (StepName = {}));\n\nvar stepOrder = [StepName.Prepare, StepName.Read, StepName.Render];\nvar jobs = stepOrder.reduce(function (acc, key) {\n  acc[key] = [];\n  return acc;\n}, {});\nvar jobsNeedProcessing = false;\n\nfunction flushCallbackList(list) {\n  var numJobs = list.length;\n\n  for (var i = 0; i < numJobs; i++) {\n    list[i]();\n  }\n\n  list.length = 0;\n}\n\nfunction flushAllJobs() {\n  if (!jobsNeedProcessing) return;\n  flushCallbackList(jobs.prepare);\n  flushCallbackList(jobs.read);\n  flushCallbackList(jobs.render);\n  jobsNeedProcessing = false;\n} // Note: The approach of schedulng jobs during the render step is incompatible with concurrent mode\n// where multiple renders might happen without a DOM update. This would result in unneccessary batched\n// jobs. But this was already a problem with our previous approach to positionTransition.\n// Hopefully the React team offer a getSnapshotBeforeUpdate-esque hook and we can move to that.\n\n\nvar createUseSyncEffect = function createUseSyncEffect(stepName) {\n  return function (callback) {\n    if (!callback) return;\n    jobsNeedProcessing = true;\n    jobs[stepName].push(callback);\n  };\n};\n\nvar layoutSync = (_a = {}, _a[StepName.Prepare] = createUseSyncEffect(StepName.Prepare), _a[StepName.Read] = createUseSyncEffect(StepName.Read), _a[StepName.Render] = createUseSyncEffect(StepName.Render), _a); // TODO: If we ever make this a public hook, add a check within `createUseSyncEffect` that, in development mode,\n// adds a useEffect to check if there's any remaining jobs and throw an error that we must add the `useLayoutSync`\n// hook to every component that schedules a job.\n\nfunction useLayoutSync() {\n  return useLayoutEffect(flushAllJobs);\n}\n\nfunction isHTMLElement(element) {\n  return element instanceof HTMLElement;\n}\n\nvar defaultLayoutTransition = {\n  duration: 0.8,\n  ease: [0.45, 0.05, 0.19, 1.0]\n};\nvar defaultPositionTransition = underDampedSpring();\n\nfunction getDefaultLayoutTransition(positionOnly) {\n  return positionOnly ? defaultPositionTransition : defaultLayoutTransition;\n}\n\nfunction isResolver(transition) {\n  return typeof transition === \"function\";\n}\n\nvar axisLabels = {\n  x: {\n    id: \"x\",\n    size: \"width\",\n    min: \"left\",\n    max: \"right\",\n    origin: \"originX\"\n  },\n  y: {\n    id: \"y\",\n    size: \"height\",\n    min: \"top\",\n    max: \"bottom\",\n    origin: \"originY\"\n  }\n};\n\nfunction centerOf(min, max) {\n  return (min + max) / 2;\n}\n\nfunction calcAxisDelta(prev, next, names) {\n  var _a;\n\n  var sizeDelta = prev[names.size] - next[names.size];\n  var origin = 0.5; // If the element has changed size we want to check whether either side is in\n  // the same position before/after the layout transition. If so, we can anchor\n  // the element to that position and only animate its size.\n\n  if (sizeDelta) {\n    if (prev[names.min] === next[names.min]) {\n      origin = 0;\n    } else if (prev[names.max] === next[names.max]) {\n      origin = 1;\n    }\n  }\n\n  var delta = (_a = {}, _a[names.size] = sizeDelta, _a[names.origin] = origin, _a[names.id] = // Only measure a position delta if we haven't anchored to one side\n  origin === 0.5 ? centerOf(prev[names.min], prev[names.max]) - centerOf(next[names.min], next[names.max]) : 0, _a);\n  return delta;\n}\n\nfunction calcDelta(prev, next) {\n  var delta = __assign({}, calcAxisDelta(prev, next, axisLabels.x), calcAxisDelta(prev, next, axisLabels.y));\n\n  return delta;\n}\n\nvar offset = {\n  getLayout: function getLayout(_a) {\n    var offset = _a.offset;\n    return offset;\n  },\n  measure: function measure(element) {\n    var offsetLeft = element.offsetLeft,\n        offsetTop = element.offsetTop,\n        offsetWidth = element.offsetWidth,\n        offsetHeight = element.offsetHeight;\n    return {\n      left: offsetLeft,\n      top: offsetTop,\n      right: offsetLeft + offsetWidth,\n      bottom: offsetTop + offsetHeight,\n      width: offsetWidth,\n      height: offsetHeight\n    };\n  }\n};\nvar boundingBox = {\n  getLayout: function getLayout(_a) {\n    var boundingBox = _a.boundingBox;\n    return boundingBox;\n  },\n  measure: function measure(element) {\n    var _a = element.getBoundingClientRect(),\n        left = _a.left,\n        top = _a.top,\n        width = _a.width,\n        height = _a.height,\n        right = _a.right,\n        bottom = _a.bottom;\n\n    return {\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      right: right,\n      bottom: bottom\n    };\n  }\n};\n\nfunction readPositionStyle(element) {\n  return window.getComputedStyle(element).position;\n}\n\nfunction getLayoutType(prev, next, positionOnly) {\n  return positionOnly && prev === next ? offset : boundingBox;\n}\n\nfunction isSizeKey(key) {\n  return key === \"width\" || key === \"height\";\n}\n\nfunction useLayoutAnimation(ref, values, controls, layoutTransition, positionOnly) {\n  if (positionOnly === void 0) {\n    positionOnly = false;\n  } // Allow any parent SyncLayoutContext components to force-update this component\n\n\n  useContext(SyncLayoutContext);\n  var element = ref.current;\n  useLayoutSync(); // If we don't have a HTML element we can early return here. We've already called all the hooks.\n\n  if (!isHTMLElement(element)) return; // Keep track of the position style prop. Ideally we'd compare offset as this is uneffected by\n  // the same transforms that we want to use to performantly animate the layout. But if position changes,\n  // for example between \"static\" and \"fixed\", we can no longer rely on the offset and need\n  // to use the visual bounding box.\n\n  var prevPosition = readPositionStyle(element);\n  var prev = {\n    offset: offset.measure(element),\n    boundingBox: boundingBox.measure(element)\n  }; // Keep track of any existing transforms so we can reapply them after measuring the target bounding box.\n\n  var transform = \"\";\n  var next;\n  var compare; // We split the unsetting, read and reapplication of the `transform` style prop into\n  // different steps via useSyncEffect. Multiple components might all be doing the same\n  // thing and by splitting these jobs and flushing them in batches we prevent layout thrashing.\n\n  layoutSync.prepare(function () {\n    // Unset the transform of all layoutTransition components so we can accurately measure\n    // the target bounding box\n    transform = element.style.transform;\n    element.style.transform = \"\";\n  });\n  layoutSync.read(function () {\n    // Read the target VisualInfo of all layoutTransition components\n    next = {\n      offset: offset.measure(element),\n      boundingBox: boundingBox.measure(element)\n    };\n    var nextPosition = readPositionStyle(element);\n    compare = getLayoutType(prevPosition, nextPosition, positionOnly);\n  });\n  layoutSync.render(function () {\n    // Reverse the layout delta of all newly laid-out layoutTransition components into their\n    // prev visual state and then animate them into their new one using transforms.\n    var prevLayout = compare.getLayout(prev);\n    var nextLayout = compare.getLayout(next);\n    var delta = calcDelta(prevLayout, nextLayout);\n    var hasAnyChanged = delta.x || delta.y || delta.width || delta.height;\n\n    if (!hasAnyChanged) {\n      // If layout hasn't changed, reapply the transform and get out of here.\n      transform && (element.style.transform = transform);\n      return;\n    }\n\n    styler(element).set({\n      originX: delta.originX,\n      originY: delta.originY\n    });\n    syncRenderSession.open();\n    var target = {};\n    var transition = {};\n    var transitionDefinition = isResolver(layoutTransition) ? layoutTransition({\n      delta: delta\n    }) : layoutTransition;\n\n    function makeTransition(layoutKey, transformKey, targetValue, visualOrigin) {\n      // If this dimension hasn't changed, early return\n      var deltaKey = isSizeKey(layoutKey) ? layoutKey : transformKey;\n      if (!delta[deltaKey]) return;\n      var baseTransition = typeof transitionDefinition === \"boolean\" ? __assign({}, getDefaultLayoutTransition(positionOnly)) : transitionDefinition;\n      var value = values.get(transformKey, targetValue);\n      var velocity = value.getVelocity();\n      transition[transformKey] = baseTransition[transformKey] ? __assign({}, baseTransition[transformKey]) : __assign({}, baseTransition);\n\n      if (transition[transformKey].velocity === undefined) {\n        transition[transformKey].velocity = velocity || 0;\n      } // The target value of all transforms is the default value of that prop (ie x = 0, scaleX = 1)\n      // This is because we're inverting the layout change with `transform` and then animating to `transform: none`\n\n\n      target[transformKey] = targetValue;\n      var offsetToApply = !isSizeKey(layoutKey) && compare === offset ? value.get() : 0;\n      value.set(visualOrigin + offsetToApply);\n    }\n\n    makeTransition(\"left\", \"x\", 0, delta.x);\n    makeTransition(\"top\", \"y\", 0, delta.y);\n\n    if (!positionOnly) {\n      makeTransition(\"width\", \"scaleX\", 1, prev.boundingBox.width / next.boundingBox.width);\n      makeTransition(\"height\", \"scaleY\", 1, prev.boundingBox.height / next.boundingBox.height);\n    }\n\n    target.transition = transition; // Only start the transition if `transitionDefinition` isn't `false`. Otherwise we want\n    // to leave the values in their newly-inverted state and let the user cope with the rest.\n\n    transitionDefinition && controls.start(target); // Force a render to ensure there's no visual flickering\n\n    syncRenderSession.flush();\n  });\n}\n\nvar Layout = {\n  key: \"layout\",\n  shouldRender: function shouldRender(_a) {\n    var positionTransition = _a.positionTransition,\n        layoutTransition = _a.layoutTransition;\n    invariant(!(positionTransition && layoutTransition), \"Don't set both positionTransition and layoutTransition on the same component\");\n    return typeof window !== \"undefined\" && !!(positionTransition || layoutTransition);\n  },\n  Component: makeRenderlessComponent(function (_a) {\n    var innerRef = _a.innerRef,\n        controls = _a.controls,\n        values = _a.values,\n        positionTransition = _a.positionTransition,\n        layoutTransition = _a.layoutTransition;\n    useLayoutAnimation(innerRef, values, controls, layoutTransition || positionTransition, !!positionTransition);\n  })\n};\n/**\r\n * A list of all valid MotionProps\r\n *\r\n * @internalremarks\r\n * This doesn't throw if a `MotionProp` name is missing - it should.\r\n */\n\nvar validMotionProps = new Set([\"initial\", \"animate\", \"exit\", \"style\", \"variants\", \"transition\", \"transformTemplate\", \"transformValues\", \"custom\", \"inherit\", \"static\", \"positionTransition\", \"layoutTransition\", \"onAnimationComplete\", \"onUpdate\", \"onDragStart\", \"onDrag\", \"onDragEnd\", \"onDirectionLock\", \"onDragTransitionEnd\", \"drag\", \"dragConstraints\", \"dragDirectionLock\", \"dragElastic\", \"dragMomentum\", \"dragPropagation\", \"dragTransition\", \"_dragValueX\", \"_dragValueY\", \"_dragTransitionControls\", \"dragOriginX\", \"dragOriginY\", \"onPan\", \"onPanStart\", \"onPanEnd\", \"onPanSessionStart\", \"onTap\", \"onTapStart\", \"onTapCancel\", \"whileHover\", \"whileTap\", \"onHoverEnd\", \"onHoverStart\"]);\n/**\r\n * Check whether a prop name is a valid `MotionProp` key.\r\n *\r\n * @param key - Name of the property to check\r\n * @returns `true` is key is a valid `MotionProp`.\r\n *\r\n * @public\r\n */\n\nfunction isValidMotionProp(key) {\n  return validMotionProps.has(key);\n}\n\nvar AnimatePropType;\n\n(function (AnimatePropType) {\n  AnimatePropType[\"Target\"] = \"Target\";\n  AnimatePropType[\"VariantLabel\"] = \"VariantLabel\";\n  AnimatePropType[\"AnimationSubscription\"] = \"AnimationSubscription\";\n})(AnimatePropType || (AnimatePropType = {}));\n\nfunction shallowCompare(next, prev) {\n  if (prev === null) return false;\n  var prevLength = prev.length;\n  if (prevLength !== next.length) return false;\n\n  for (var i = 0; i < prevLength; i++) {\n    if (prev[i] !== next[i]) return false;\n  }\n\n  return true;\n}\n\nvar hasUpdated = function hasUpdated(prev, next) {\n  return next !== undefined && (Array.isArray(prev) && Array.isArray(next) ? !shallowCompare(next, prev) : prev !== next);\n};\n\nfunction targetWithoutTransition(_a, mergeTransitionEnd) {\n  if (mergeTransitionEnd === void 0) {\n    mergeTransitionEnd = false;\n  }\n\n  var transition = _a.transition,\n      transitionEnd = _a.transitionEnd,\n      target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n\n  return mergeTransitionEnd ? __assign({}, target, transitionEnd) : target;\n}\n/**\r\n * Handle the `animate` prop when its an object of values, ie:\r\n *\r\n * ```jsx\r\n * <motion.div animate={{ opacity: 1 }} />\r\n * ```\r\n *\r\n * @internalremarks\r\n * It might be worth consolidating this with `use-variants`\r\n *\r\n * ```jsx\r\n * <motion.div animate=\"visible\" />\r\n * ```\r\n *\r\n * @param target\r\n * @param controls\r\n * @param values\r\n * @param transition\r\n *\r\n * @internal\r\n */\n\n\nfunction useAnimateProp(targetAndTransition, controls, values, defaultTransition) {\n  var isInitialRender = useRef(true);\n  var prevValues = useRef(null);\n\n  if (!prevValues.current) {\n    prevValues.current = targetWithoutTransition(targetAndTransition, true);\n  }\n\n  useEffect(function () {\n    var targetToAnimate = {}; // These are the values we're actually animating\n\n    var animatingTarget = targetWithoutTransition(targetAndTransition); // This is the target as it'll be once transitionEnd values are applied\n\n    var finalTarget = targetWithoutTransition(targetAndTransition, true); // Detect which values have changed between renders\n\n    for (var key in animatingTarget) {\n      // This value should animate on mount if this value doesn't already exist (wasn't\n      // defined in `style` or `initial`) or if it does exist and it's already changed.\n      var shouldAnimateOnMount = isInitialRender.current && (!values.has(key) || values.get(key).get() !== finalTarget[key]); // If this value has updated between renders or it's we're animating this value on mount,\n      // add it to the animate target.\n\n      var isValidValue = finalTarget[key] !== null;\n      var valueHasUpdated = hasUpdated(prevValues.current[key], finalTarget[key]);\n\n      if (isValidValue && (valueHasUpdated || shouldAnimateOnMount)) {\n        targetToAnimate[key] = animatingTarget[key];\n      }\n    }\n\n    isInitialRender.current = false;\n    prevValues.current = __assign({}, prevValues.current, finalTarget);\n\n    if (Object.keys(targetToAnimate).length) {\n      controls.start(__assign({}, targetToAnimate, {\n        transition: targetAndTransition.transition || defaultTransition,\n        transitionEnd: targetAndTransition.transitionEnd\n      }));\n    }\n  }, [targetAndTransition]);\n}\n\nvar labelsToArray = function labelsToArray(label) {\n  if (!label) {\n    return [];\n  }\n\n  if (Array.isArray(label)) {\n    return label;\n  }\n\n  return [label];\n};\n\nvar resolveVariantLabels = function resolveVariantLabels(variant) {\n  var unresolvedVariant = variant instanceof MotionValue ? variant.get() : variant;\n  return Array.from(new Set(labelsToArray(unresolvedVariant)));\n};\n/**\r\n * Hooks in React sometimes accept a dependency array as their final argument. (ie useEffect/useMemo)\r\n * When values in this array change, React re-runs the dependency. However if the array\r\n * contains a variable number of items, React throws an error.\r\n */\n\n\nvar asDependencyList = function asDependencyList(list) {\n  return [list.join(\",\")];\n};\n\nvar hasVariantChanged = function hasVariantChanged(oldVariant, newVariant) {\n  return oldVariant.join(\",\") !== newVariant.join(\",\");\n};\n/**\r\n * Handle variants and the `animate` prop when its set as variant labels.\r\n *\r\n * @param initial - Initial variant(s)\r\n * @param animate - Variant(s) to animate to\r\n * @param inherit - `true` is inheriting animations from parent\r\n * @param controls - Animation controls\r\n *\r\n * @internal\r\n */\n\n\nfunction useVariants(initial, animate, inherit, controls) {\n  var targetVariants = resolveVariantLabels(animate);\n  var context = useContext(MotionContext);\n  var parentAlreadyMounted = context.hasMounted && context.hasMounted.current;\n  var hasMounted = useRef(false);\n  useEffect(function () {\n    var shouldAnimate = false;\n\n    if (inherit) {\n      // If we're inheriting variant changes and the parent has already\n      // mounted when this component loads, we need to manually trigger\n      // this animation.\n      shouldAnimate = !!parentAlreadyMounted;\n      targetVariants = resolveVariantLabels(context.animate);\n    } else {\n      shouldAnimate = hasMounted.current || hasVariantChanged(resolveVariantLabels(initial), targetVariants);\n    }\n\n    shouldAnimate && controls.start(targetVariants);\n    hasMounted.current = true;\n  }, asDependencyList(targetVariants));\n}\n/**\r\n * `useAnimationGroupSubscription` allows a component to subscribe to an\r\n * externally-created `AnimationControls`, created by the `useAnimation` hook.\r\n *\r\n * @param animation\r\n * @param controls\r\n *\r\n * @internal\r\n */\n\n\nfunction useAnimationGroupSubscription(animation, controls) {\n  var unsubscribe = useMemo(function () {\n    return animation.subscribe(controls);\n  }, [animation]);\n  useEffect(function () {\n    return function () {\n      unsubscribe && unsubscribe();\n    };\n  }, [unsubscribe]);\n}\n\nvar _a$1, _b;\n\nvar AnimatePropComponents = (_a$1 = {}, _a$1[AnimatePropType.Target] = makeRenderlessComponent(function (_a) {\n  var animate = _a.animate,\n      controls = _a.controls,\n      values = _a.values,\n      transition = _a.transition;\n  return useAnimateProp(animate, controls, values, transition);\n}), _a$1[AnimatePropType.VariantLabel] = makeRenderlessComponent(function (_a) {\n  var animate = _a.animate,\n      _b = _a.inherit,\n      inherit = _b === void 0 ? true : _b,\n      controls = _a.controls,\n      initial = _a.initial;\n  return useVariants(initial, animate, inherit, controls);\n}), _a$1[AnimatePropType.AnimationSubscription] = makeRenderlessComponent(function (_a) {\n  var animate = _a.animate,\n      controls = _a.controls;\n  return useAnimationGroupSubscription(animate, controls);\n}), _a$1);\n\nvar isVariantLabel$1 = function isVariantLabel$1(prop) {\n  return Array.isArray(prop) || typeof prop === \"string\";\n};\n\nvar isAnimationSubscription = function isAnimationSubscription(_a) {\n  var animate = _a.animate;\n  return animate instanceof AnimationControls;\n};\n\nvar animationProps = [\"initial\", \"animate\", \"whileTap\", \"whileHover\"];\nvar animatePropTypeTests = (_b = {}, _b[AnimatePropType.Target] = function (props) {\n  return props.animate !== undefined && !isVariantLabel$1(props.animate) && !isAnimationSubscription(props);\n}, _b[AnimatePropType.VariantLabel] = function (props) {\n  return props.variants !== undefined || animationProps.some(function (key) {\n    return typeof props[key] === \"string\";\n  });\n}, _b[AnimatePropType.AnimationSubscription] = isAnimationSubscription, _b);\n\nvar getAnimationComponent = function getAnimationComponent(props) {\n  var animatePropType = undefined;\n\n  for (var key in AnimatePropType) {\n    if (animatePropTypeTests[key](props)) {\n      animatePropType = key;\n    }\n  }\n\n  return animatePropType ? AnimatePropComponents[animatePropType] : undefined;\n};\n\nvar Exit = {\n  key: \"exit\",\n  shouldRender: function shouldRender(_a, _b) {\n    var exit = _a.exit;\n    var exitProps = _b.exitProps;\n    var hasExitProps = !!exitProps;\n    var hasExitAnimation = !!exit;\n    invariant(!hasExitProps || hasExitProps && hasExitAnimation, \"No exit prop defined on a child of AnimatePresence.\");\n    return hasExitProps && hasExitAnimation;\n  },\n  Component: makeRenderlessComponent(function (props) {\n    var animate = props.animate,\n        controls = props.controls,\n        parentContext = props.parentContext,\n        exit = props.exit;\n    var exitProps = parentContext.exitProps;\n    var isPlayingExitAnimation = useRef(false); // This early return is more for types - it won't actually run because of the `shouldRender` above.\n\n    if (!exitProps || !exit) return;\n    var isExiting = exitProps.isExiting,\n        custom = exitProps.custom,\n        onExitComplete = exitProps.onExitComplete;\n    useEffect(function () {\n      if (isExiting) {\n        if (!isPlayingExitAnimation.current && exit) {\n          controls.setProps(__assign({}, props, {\n            custom: custom !== undefined ? custom : props.custom\n          }));\n          controls.start(exit).then(onExitComplete);\n        }\n\n        isPlayingExitAnimation.current = true;\n      } else if (isPlayingExitAnimation.current && animate && !(animate instanceof AnimationControls)) {\n        controls.start(animate);\n      }\n\n      if (!isExiting) {\n        isPlayingExitAnimation.current = false;\n      }\n    }, [isExiting]);\n  })\n};\n\nvar isPropValid = function isPropValid(key) {\n  return !isValidMotionProp(key);\n};\n/**\r\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\r\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\r\n * of these should be passed to the underlying DOM node.\r\n *\r\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\r\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\r\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\r\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\r\n *\r\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\r\n * actually required.\r\n */\n\n\ntry {\n  var emotionIsPropValid_1 = require(\"@emotion/is-prop-valid\")[\"default\"];\n\n  isPropValid = function isPropValid(key) {\n    // Handle events explicitly as Emotion validates them all as true\n    if (key.startsWith(\"on\")) {\n      return !isValidMotionProp(key);\n    } else {\n      return emotionIsPropValid_1(key);\n    }\n  };\n} catch (_a) {// We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\n\nfunction filterValidProps(props) {\n  var domProps = {};\n\n  for (var key in props) {\n    if (isPropValid(key)) {\n      domProps[key] = props[key];\n    }\n  }\n\n  return domProps;\n}\n\nvar buildSVGProps = function buildSVGProps(values, style) {\n  var motionValueStyles = resolveCurrent(values);\n  var props = buildSVGAttrs(motionValueStyles, undefined, undefined, undefined, undefined, false);\n  props.style = __assign({}, style, props.style);\n  return props;\n};\n\nvar functionalityComponents = [Layout, Drag, Gestures, Exit];\nvar numFunctionalityComponents = functionalityComponents.length;\n/**\r\n * Create a configuration for `motion` components that provides DOM-specific functionality.\r\n *\r\n * @internal\r\n */\n\nfunction createDomMotionConfig(Component) {\n  var isDOM = typeof Component === \"string\";\n  var isSVG = isDOM && svgElements.indexOf(Component) !== -1;\n  return {\n    renderComponent: function renderComponent(ref, style, values, props, isStatic) {\n      var forwardedProps = isDOM ? filterValidProps(props) : props;\n      var staticVisualStyles = isSVG ? buildSVGProps(values, style) : {\n        style: buildStyleAttr(values, style, isStatic)\n      };\n      return createElement(Component, __assign({}, forwardedProps, {\n        ref: ref\n      }, staticVisualStyles));\n    },\n\n    /**\r\n     * loadFunctionalityComponents gets used by the `motion` component\r\n     *\r\n     * Each functionality component gets provided the `ref`, animation controls and the `MotionValuesMap`\r\n     * generated for that component, as well as all the `props` passed to it by the user.\r\n     *\r\n     * The pattern used to determine whether to load and use each piece of functionality is\r\n     * consistent (should render? Then push component) and could be used to extend functionality.\r\n     *\r\n     * By exposing a mutable piece of memory via an API like `extendMotionComponent` we could\r\n     * allow users to add `FunctionalComponentDefinition`s. This would allow us to offer file size\r\n     * reductions by shipping an entry point that doesn't load gesture and drag functionality, and\r\n     * also offer a way for users to develop plugins/other functionality. Because these functionalities\r\n     * are loaded as components, we can look into using Suspense for this purpose.\r\n     *\r\n     * For user-defined functionality we'd need to allow\r\n     *  1) User-defined prop typing (extending `P`)\r\n     *  2) User-defined \"clean props\" function that removes their plugin's props before being passed to the DOM.\r\n     */\n    loadFunctionalityComponents: function loadFunctionalityComponents(ref, values, props, context, controls, inherit) {\n      var activeComponents = []; // TODO: Consolidate Animation functionality loading strategy with other functionality components\n\n      var Animation = getAnimationComponent(props);\n\n      if (Animation) {\n        activeComponents.push(createElement(Animation, {\n          key: \"animation\",\n          initial: props.initial,\n          animate: props.animate,\n          variants: props.variants,\n          transition: props.transition,\n          controls: controls,\n          inherit: inherit,\n          values: values\n        }));\n      }\n\n      for (var i = 0; i < numFunctionalityComponents; i++) {\n        var _a = functionalityComponents[i],\n            shouldRender = _a.shouldRender,\n            key = _a.key,\n            Component_1 = _a.Component;\n\n        if (shouldRender(props, context)) {\n          activeComponents.push(createElement(Component_1, __assign({\n            key: key\n          }, props, {\n            parentContext: context,\n            values: values,\n            controls: controls,\n            innerRef: ref\n          })));\n        }\n      }\n\n      return activeComponents;\n    },\n    getValueControlsConfig: function getValueControlsConfig(ref, values) {\n      return {\n        values: values,\n        readValueFromSource: function readValueFromSource(key) {\n          return styler(ref.current).get(key);\n        },\n        // TODO: This is a good second source of plugins. This function contains the CSS variable\n        // and unit conversion support. These functions share a common signature. We could make another\n        // API for adding these.\n        makeTargetAnimatable: parseDomVariant(values, ref)\n      };\n    }\n  };\n}\n\nvar htmlMotionComponents = htmlElements.reduce(function (acc, Component) {\n  var config = createDomMotionConfig(Component); // Suppress \"Expression produces a union type that is too complex to represent\" error\n  // @ts-ignore\n\n  acc[Component] = createMotionComponent(config);\n  return acc;\n}, {});\nvar svgMotionComponents = svgElements.reduce(function (acc, Component) {\n  // Suppress \"Expression produces a union type that is too complex to represent\" error\n  // @ts-ignore\n  acc[Component] = createMotionComponent(createDomMotionConfig(Component));\n  return acc;\n}, {});\n/**\r\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\r\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\r\n *\r\n * @internalremarks\r\n *\r\n * I'd like to make it possible for these to be loaded \"on demand\" - to reduce bundle size by only\r\n * including HTML/SVG stylers, animation and/or gesture support when necessary.\r\n *\r\n * ```jsx\r\n * <motion.div animate={{ x: 100 }} />\r\n *\r\n * <motion.p animate={{ height: 200 }} />\r\n *\r\n * <svg><motion.circle r={10} animate={{ r: 20 }} /></svg>\r\n * ```\r\n *\r\n * @public\r\n */\n\nvar motion = __assign({\n  /**\r\n   * Convert a custom React component into a `motion` component.\r\n   *\r\n   * It can also accept a string, to create [custom DOM elements](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements).\r\n   *\r\n   * ```jsx\r\n   * const Component = React.forwardRef((props: Props, ref) => {\r\n   *   return <div ref={ref} />\r\n   * })\r\n   *\r\n   * const MotionComponent = motion.custom<Props>(Component)\r\n   * ```\r\n   *\r\n   * @param Component\r\n   */\n  custom: function custom(Component) {\n    return createMotionComponent(createDomMotionConfig(Component));\n  }\n}, htmlMotionComponents, svgMotionComponents);\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n *\r\n * @internal\r\n */\n\n\nfunction unwrapMotionValue(value) {\n  var unwrappedValue = value instanceof MotionValue ? value.get() : value;\n  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;\n}\n\nvar isCustomValueType = function isCustomValueType(v) {\n  return typeof v === \"object\" && v.mix;\n};\n\nvar getMixer = function getMixer(v) {\n  return isCustomValueType(v) ? v.mix : undefined;\n};\n\nfunction transform() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var useImmediate = !Array.isArray(args[0]);\n  var argOffset = useImmediate ? 0 : -1;\n  var inputValue = args[0 + argOffset];\n  var inputRange = args[1 + argOffset];\n  var outputRange = args[2 + argOffset];\n  var options = args[3 + argOffset];\n  var interpolator = interpolate(inputRange, outputRange, __assign({\n    mixer: getMixer(outputRange[0])\n  }, options));\n  return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nvar isTransformer = function isTransformer(v) {\n  return typeof v === \"function\";\n};\n\nvar noop = function noop(v) {\n  return v;\n};\n\nfunction useTransform(parent, customTransform, to, options) {\n  var value = useRef(null);\n  var comparitor = [parent];\n  var transformer = noop;\n\n  if (isTransformer(customTransform)) {\n    transformer = customTransform;\n  } else if (Array.isArray(to)) {\n    var from = customTransform;\n    transformer = transform(from, to, options);\n    comparitor = [parent, from.join(\",\"), to.join(\",\")];\n  }\n\n  return useMemo(function () {\n    if (value.current) value.current.destroy();\n    value.current = parent.addChild({\n      transformer: transformer\n    });\n    return value.current;\n  }, comparitor);\n} // Keep things reasonable and avoid scale: Infinity. In practise we might need\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\n// to simply hide content at unreasonable scales.\n\n\nvar maxScale = 100000;\n\nvar invertScale = function invertScale(scale) {\n  return scale > 0.001 ? 1 / scale : maxScale;\n};\n/**\r\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\r\n * of their respective parent scales.\r\n *\r\n * This is useful for undoing the distortion of content when scaling a parent component.\r\n *\r\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\r\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\r\n * of those instead.\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const MyComponent = () => {\r\n *   const { scaleX, scaleY } = useInvertedScale()\r\n *   return <motion.div style={{ scaleX, scaleY }} />\r\n * }\r\n * ```\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * function MyComponent() {\r\n *   const { scaleX, scaleY } = useInvertedScale()\r\n *   return <Frame scaleX={scaleX} scaleY={scaleY} />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\n\n\nfunction useInvertedScale(scale) {\n  var parentScaleX = useMotionValue(1);\n  var parentScaleY = useMotionValue(1);\n  var values = useContext(MotionContext).values;\n  invariant(!!(scale || values), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\n\n  if (scale) {\n    parentScaleX = scale.scaleX || parentScaleX;\n    parentScaleY = scale.scaleY || parentScaleY;\n  } else if (values) {\n    parentScaleX = values.get(\"scaleX\", 1);\n    parentScaleY = values.get(\"scaleY\", 1);\n  }\n\n  var scaleX = useTransform(parentScaleX, invertScale);\n  var scaleY = useTransform(parentScaleY, invertScale);\n  return {\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nfunction useOnChange(value, callback) {\n  useEffect(function () {\n    return isMotionValue(value) ? value.onChange(callback) : undefined;\n  }, [value]);\n}\n/**\r\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\r\n *\r\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\r\n * to another `MotionValue`.\r\n *\r\n * @remarks\r\n *\r\n * ```jsx\r\n * const x = useSpring(0, { stiffness: 300 })\r\n * const y = useSpring(x, { damping: 10 })\r\n * ```\r\n *\r\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\r\n * @param springConfig - Configuration options for the spring.\r\n * @returns `MotionValue`\r\n *\r\n * @public\r\n */\n\n\nfunction useSpring(source, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var activeSpringAnimation = useRef(null);\n  var value = useMotionValue(isMotionValue(source) ? source.get() : source);\n  useMemo(function () {\n    return value.attach(function (v, set) {\n      if (activeSpringAnimation.current) {\n        activeSpringAnimation.current.stop();\n      }\n\n      activeSpringAnimation.current = spring(__assign({\n        from: value.get(),\n        to: v,\n        velocity: value.getVelocity()\n      }, config)).start(set);\n      return value.get();\n    });\n  }, Object.values(config));\n  useOnChange(source, function (v) {\n    return value.set(parseFloat(v));\n  });\n  return value;\n}\n\nvar scrollX = motionValue(0);\nvar scrollY = motionValue(0);\nvar scrollXProgress = motionValue(0);\nvar scrollYProgress = motionValue(0);\n\nvar setProgress = function setProgress(offset, maxOffset, value) {\n  value.set(!maxOffset || !offset ? 0 : offset / maxOffset);\n};\n\nvar hasEventListener = false;\n\nvar addScrollListener = function addScrollListener() {\n  hasEventListener = true;\n  if (typeof window === \"undefined\") return;\n\n  var updateScrollValues = function updateScrollValues() {\n    var xOffset = window.pageXOffset;\n    var yOffset = window.pageYOffset; // Set absolute positions\n\n    scrollX.set(xOffset);\n    scrollY.set(yOffset); // Set 0-1 progress\n\n    setProgress(xOffset, document.body.clientWidth - window.innerWidth, scrollXProgress);\n    setProgress(yOffset, document.body.clientHeight - window.innerHeight, scrollYProgress);\n  };\n\n  updateScrollValues();\n  window.addEventListener(\"resize\", updateScrollValues);\n  window.addEventListener(\"scroll\", updateScrollValues, {\n    passive: true\n  });\n};\n\nvar viewportMotionValues = {\n  scrollX: scrollX,\n  scrollY: scrollY,\n  scrollXProgress: scrollXProgress,\n  scrollYProgress: scrollYProgress\n};\n/**\r\n * Provides `MotionValue`s that update when the viewport scrolls:\r\n *\r\n * - `scrollX` — Horizontal scroll distance in pixels.\r\n * - `scrollY` — Vertical scroll distance in pixels.\r\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\r\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\r\n *\r\n * **Note:** If the returned scroll `MotionValue`s don't seem to be updating,\r\n * double check if the `body` tag styles are set to `width: 100%; height: 100%` or\r\n * similar, as this can break accurate measurement of viewport scroll.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import {\r\n *   Frame,\r\n *   useViewportScroll,\r\n *   useTransform\r\n * } from \"framer\"\r\n *\r\n * export function MyComponent() {\r\n *   const { scrollYProgress } = useViewportScroll()\r\n *   return <Frame scaleX={scrollYProgress} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const { scrollYProgress } = useViewportScroll()\r\n *   return <motion.div style={{ scaleX: scrollYProgress }} />\r\n * }\r\n * ```\r\n *\r\n * @internalremarks\r\n * This isn't technically a hook yet, but in the future it might be nice\r\n * to accept refs to elements and add scroll listeners to those, which\r\n * may involve the use of lifecycle.\r\n *\r\n * @public\r\n */\n\nfunction useViewportScroll() {\n  if (!hasEventListener) {\n    addScrollListener();\n  }\n\n  return viewportMotionValues;\n}\n/**\r\n * Creates `AnimationControls`, which can be used to manually start, stop\r\n * and sequence animations on one or more components.\r\n *\r\n * The returned `AnimationControls` should be passed to the `animate` property\r\n * of the components you want to animate.\r\n *\r\n * These components can then be animated with the `start` method.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from 'react'\r\n * import { Frame, useAnimation } from 'framer'\r\n *\r\n * export function MyComponent(props) {\r\n *    const controls = useAnimation()\r\n *\r\n *    controls.start({\r\n *        x: 100,\r\n *        transition: { duration: 0.5 },\r\n *    })\r\n *\r\n *    return <Frame animate={controls} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * import * as React from 'react'\r\n * import { motion, useAnimation } from 'framer-motion'\r\n *\r\n * export function MyComponent(props) {\r\n *    const controls = useAnimation()\r\n *\r\n *    controls.start({\r\n *        x: 100,\r\n *        transition: { duration: 0.5 },\r\n *    })\r\n *\r\n *    return <motion.div animate={controls} />\r\n * }\r\n * ```\r\n *\r\n * @returns Animation controller with `start` and `stop` methods\r\n *\r\n * @public\r\n */\n\n\nfunction useAnimation() {\n  var animationControls = useConstant(function () {\n    return new AnimationControls();\n  });\n  useEffect(function () {\n    animationControls.mount();\n    return function () {\n      return animationControls.unmount();\n    };\n  }, []);\n  return animationControls;\n}\n/**\r\n * Experimental API.\r\n *\r\n * Makes an animated version of `useState`.\r\n *\r\n * @remarks\r\n *\r\n * When the returned state setter is called, values will be animated to their new target.\r\n *\r\n * This allows the animation of arbitrary React components.\r\n *\r\n * **Note:** When animating DOM components, it's always preferable to use the `animate` prop, as Framer\r\n * will bypass React's rendering cycle with one optimised for 60fps motion. This Hook is specifically\r\n * for animating props on arbitrary React components, or for animating text content.\r\n *\r\n * ```jsx\r\n * const [state, setState] = useAnimatedState({ percentage: 0 })\r\n *\r\n * return (\r\n *   <Graph\r\n *     percentage={state.percentage}\r\n *     onTap={() => setState({ percentage: 50 })}\r\n *   />\r\n * )\r\n * ```\r\n *\r\n * @internalremarks\r\n *\r\n * TODO:\r\n * - Make hook accept a typed version of Target that accepts any value (not just DOM values)\r\n * - Allow hook to accept single values. ie useAnimatedState(0)\r\n * - Allow providing MotionValues via initialState.\r\n *\r\n * @beta\r\n */\n\n\nfunction useAnimatedState(initialState) {\n  var _a = useState(initialState),\n      animationState = _a[0],\n      onUpdate = _a[1];\n\n  var config = useConstant(function () {\n    return {\n      onUpdate: onUpdate\n    };\n  });\n  var values = useMotionValues(config);\n  var controls = useValueAnimationControls({\n    values: values,\n    readValueFromSource: function readValueFromSource(key) {\n      return animationState[key];\n    }\n  }, {}, false);\n  var startAnimation = useConstant(function () {\n    return function (animationDefinition) {\n      return controls.start(animationDefinition);\n    };\n  });\n  useEffect(function () {\n    values.mount();\n    return function () {\n      return values.unmount();\n    };\n  }, []);\n  return [animationState, startAnimation];\n}\n/**\r\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import { Frame, useCycle } from \"framer\"\r\n *\r\n * export function MyComponent() {\r\n *   const [x, cycleX] = useCycle(0, 50, 100)\r\n *\r\n *   return (\r\n *     <Frame\r\n *       animate={{ x: x }}\r\n *       onTap={() => cycleX()}\r\n *      />\r\n *    )\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import { motion, useCycle } from \"framer-motion\"\r\n *\r\n * export const MyComponent = () => {\r\n *   const [x, cycleX] = useCycle(0, 50, 100)\r\n *\r\n *   return (\r\n *     <motion.div\r\n *       animate={{ x: x }}\r\n *       onTap={() => cycleX()}\r\n *      />\r\n *    )\r\n * }\r\n * ```\r\n *\r\n * @param items - items to cycle through\r\n * @returns [currentState, cycleState]\r\n *\r\n * @public\r\n */\n\n\nfunction useCycle() {\n  var items = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    items[_i] = arguments[_i];\n  } // TODO: After Framer X beta, remove this warning\n\n\n  warning(items.length > 1, \"useCycle syntax has changed. `useCycle([0, 1, 2])` becomes `useCycle(0, 1, 2)`\");\n  var index = useRef(0);\n\n  var _a = useState(items[index.current]),\n      item = _a[0],\n      setItem = _a[1];\n\n  return [item, function (next) {\n    index.current = typeof next !== \"number\" ? wrap(0, items.length, index.current + 1) : next;\n    setItem(items[index.current]);\n  }];\n}\n\nvar PresenceChild = function PresenceChild(_a) {\n  var children = _a.children,\n      exitProps = _a.exitProps;\n  var context = useContext(MotionContext); // Create a new `value` in all instances to ensure `motion` children re-render\n  // and detect any layout changes that might have occurred.\n\n  context = __assign({}, context, {\n    exitProps: exitProps || {}\n  });\n  return createElement(MotionContext.Provider, {\n    value: context\n  }, children);\n};\n\nfunction getChildKey(child) {\n  return child.key || \"\";\n}\n\nfunction updateChildLookup(children, allChildren) {\n  var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n  children.forEach(function (child) {\n    var key = getChildKey(child);\n\n    if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n      if (seenChildren.has(key)) {\n        console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\n      }\n\n      seenChildren.add(key);\n    }\n\n    allChildren.set(key, child);\n  });\n}\n\nfunction onlyElements(children) {\n  var filtered = []; // We use forEach here instead of map as map mutates the component key by preprending `.$`\n\n  Children.forEach(children, function (child) {\n    if (isValidElement(child)) filtered.push(child);\n  });\n  return filtered;\n}\n/**\r\n * The `AnimatePresence` component enables the use of the `exit` prop to animate components\r\n * when they're removed from the component tree.\r\n *\r\n * When adding/removing more than a single child component, every component\r\n * **must** be given a unique `key` prop.\r\n *\r\n * You can propagate exit animations throughout a tree by using variants.\r\n *\r\n * @library\r\n *\r\n * You can use any component(s) within `AnimatePresence`, but the first `Frame` in each should\r\n * have an `exit` property defined.\r\n *\r\n * ```jsx\r\n * import { Frame, AnimatePresence } from 'framer'\r\n *\r\n * // As items are added and removed from `items`\r\n * export function Items({ items }) {\r\n *   return (\r\n *     <AnimatePresence>\r\n *       {items.map(item => (\r\n *         <Frame\r\n *           key={item.id}\r\n *           initial={{ opacity: 0 }}\r\n *           animate={{ opacity: 1 }}\r\n *           exit={{ opacity: 0 }}\r\n *         />\r\n *       ))}\r\n *     </AnimatePresence>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * You can use any component(s) within `AnimatePresence`, but the first `motion` component in each should\r\n * have an `exit` property defined.\r\n *\r\n * ```jsx\r\n * import { motion, AnimatePresence } from 'framer-motion'\r\n *\r\n * export const Items = ({ items }) => (\r\n *   <AnimatePresence>\r\n *     {items.map(item => (\r\n *       <motion.div\r\n *         key={item.id}\r\n *         initial={{ opacity: 0 }}\r\n *         animate={{ opacity: 1 }}\r\n *         exit={{ opacity: 0 }}\r\n *       />\r\n *     ))}\r\n *   </AnimatePresence>\r\n * )\r\n * ```\r\n *\r\n * @public\r\n */\n\n\nvar AnimatePresence = function AnimatePresence(_a) {\n  var children = _a.children,\n      custom = _a.custom,\n      _b = _a.initial,\n      initial = _b === void 0 ? true : _b,\n      onExitComplete = _a.onExitComplete,\n      exitBeforeEnter = _a.exitBeforeEnter; // We want to force a re-render once all exiting animations have finished. We\n  // either use a local forceUpdate function, or one from a parent context if it exists.\n\n  var localForceUpdate = useForceUpdate();\n  var contextForceUpdate = useContext(SyncLayoutContext);\n  var forceUpdate = contextForceUpdate || localForceUpdate;\n  var isInitialRender = useRef(true); // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n\n  var filteredChildren = onlyElements(children); // Keep a living record of the children we're actually rendering so we\n  // can diff to figure out which are entering and exiting\n\n  var presentChildren = useRef(filteredChildren); // A lookup table to quickly reference components by key\n\n  var allChildren = useRef(new Map()).current; // A living record of all currently exiting components.\n\n  var exiting = useRef(new Set()).current;\n  updateChildLookup(filteredChildren, allChildren); // If this is the initial component render, just deal with logic surrounding whether\n  // we play onMount animations or not.\n\n  if (isInitialRender.current) {\n    isInitialRender.current = false;\n    return createElement(Fragment, null, filteredChildren.map(function (child) {\n      return createElement(PresenceChild, {\n        key: getChildKey(child),\n        exitProps: initial ? undefined : {\n          initial: false\n        }\n      }, child);\n    }));\n  } // If this is a subsequent render, deal with entering and exiting children\n\n\n  var childrenToRender = filteredChildren.slice(); // Diff the keys of the currently-present and target children to update our\n  // exiting list.\n\n  var presentKeys = presentChildren.current.map(getChildKey);\n  var targetKeys = filteredChildren.map(getChildKey); // Diff the present children with our target children and mark those that are exiting\n\n  var numPresent = presentKeys.length;\n\n  for (var i = 0; i < numPresent; i++) {\n    var key = presentKeys[i];\n\n    if (targetKeys.indexOf(key) === -1) {\n      exiting.add(key);\n    } else {\n      // In case this key has re-entered, remove from the exiting list\n      exiting[\"delete\"](key);\n    }\n  } // If we currently have exiting children, and we're deferring rendering incoming children\n  // until after all current children have exiting, empty the childrenToRender array\n\n\n  if (exitBeforeEnter && exiting.size) {\n    childrenToRender = [];\n  } // Loop through all currently exiting components and clone them to overwrite `animate`\n  // with any `exit` prop they might have defined.\n\n\n  exiting.forEach(function (key) {\n    // If this component is actually entering again, early return\n    if (targetKeys.indexOf(key) !== -1) return;\n    var child = allChildren.get(key);\n    if (!child) return;\n    var insertionIndex = presentKeys.indexOf(key);\n\n    var onExit = function onExit() {\n      exiting[\"delete\"](key); // Remove this child from the present children\n\n      var removeIndex = presentChildren.current.findIndex(function (child) {\n        return child.key === key;\n      });\n      presentChildren.current.splice(removeIndex, 1); // Defer re-rendering until all exiting children have indeed left\n\n      if (!exiting.size) {\n        presentChildren.current = filteredChildren;\n        forceUpdate();\n        onExitComplete && onExitComplete();\n      }\n    };\n\n    var exitProps = {\n      custom: custom,\n      isExiting: true,\n      onExitComplete: onExit\n    };\n    childrenToRender.splice(insertionIndex, 0, createElement(PresenceChild, {\n      key: getChildKey(child),\n      exitProps: exitProps\n    }, child));\n  }); // Add `MotionContext` even to children that don't need it to ensure we're rendering\n  // the same tree between renders\n\n  childrenToRender = childrenToRender.map(function (child) {\n    var key = child.key;\n    return exiting.has(key) ? child : createElement(PresenceChild, {\n      key: getChildKey(child)\n    }, child);\n  });\n  presentChildren.current = childrenToRender;\n\n  if (process.env.NODE_ENV !== \"production\" && exitBeforeEnter && childrenToRender.length > 1) {\n    console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n  }\n\n  return createElement(Fragment, null, exiting.size ? childrenToRender : childrenToRender.map(function (child) {\n    return cloneElement(child);\n  }));\n};\n\nexport { AnimatePresence, AnimationControls, MotionContext, MotionPluginContext, MotionPlugins, MotionValue, Point, UnstableSyncLayout, animationControls, createMotionComponent, isValidMotionProp, motion, motionValue, transform, unwrapMotionValue, useAnimatedState, useAnimation, useCycle, useDomEvent, useExternalRef, useGestures, useInvertedScale, useMotionValue, usePanGesture, useSpring, useTapGesture, useTransform, useViewportScroll };"],"sourceRoot":""}